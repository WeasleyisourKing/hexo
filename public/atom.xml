<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Weasley is our King!~</title>
  
  <subtitle>Weasley</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-04-29T09:35:35.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>弥漫</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>访问量/阅读次数/字数统计[说明]</title>
    <link href="http://yoursite.com/3020/04/29/picture/"/>
    <id>http://yoursite.com/3020/04/29/picture/</id>
    <published>3020-04-29T09:12:19.000Z</published>
    <updated>2019-04-29T09:35:35.000Z</updated>
    
    <content type="html"><![CDATA[<p>•┈┈┈┈┈┈୨♡୧┈┈┈┈┈┈•<br>情报有误<br><a id="more"></a><br>✧̣̥̇‧✦‧✧̣̥̇‧✦‧✧̣̥̇‧✦‧✧̣̥̇‧✦‧✧̣̥̇‧✦‧✧̣̥̇‧✦‧✧̣̥̇‧✦</p><p>在测试的时候,每次点击菜单都会计数<br>访问次数统计并没有过滤本狗子的ip</p><p>所以…<br>先这样吧</p><p>阅读次数&amp;字数统计 执行失败</p><p>告辞 ꔛꕤ</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;•┈┈┈┈┈┈୨♡୧┈┈┈┈┈┈•&lt;br&gt;情报有误&lt;br&gt;
    
    </summary>
    
    
      <category term="汪汪汪" scheme="http://yoursite.com/tags/%E6%B1%AA%E6%B1%AA%E6%B1%AA/"/>
    
  </entry>
  
  <entry>
    <title>linux下不同服务器间数据传输 (rcp,scp,rsync,ftp,sftp,lftp,wget,curl)</title>
    <link href="http://yoursite.com/2019/05/30/%E6%96%87%E4%BB%B6%E4%BC%A0%E8%BE%93/"/>
    <id>http://yoursite.com/2019/05/30/文件传输/</id>
    <published>2019-05-30T10:34:23.000Z</published>
    <updated>2019-05-30T09:20:13.000Z</updated>
    
    <content type="html"><![CDATA[<p>•┈┈┈┈┈┈୨୧┈┈┈┈┈┈•<br><a id="more"></a><br>linux下不同服务器间数据传输 (rcp,scp,rsync,ftp,sftp,lftp,wget,curl) </p><p>因为工作原因，需要经常在不同的服务器见进行文件传输，特别是大文件的传输，因此对linux下不同服务器间数据传输命令和工具进行了研究和总结。主要是rcp,scp,rsync,ftp,sftp,lftp,wget,curl。<br>rcp<br>rcp不是一种安全的的传输文件的方式，rcp通过rsh（rsh见下面）来执行远程命令，要使用rcp必须经过一些配置，现在rcp已经被scp取代了，常用scp来进行文件传输。要使用rcp，需要具备以下条件：<br>（1）如果系统中有/etc/hosts 文件，应确保该文件包含要与之进行通信的远程主机信息：internet_address  official_name   alias。例如：1．186．10.<em>**  blade1.ibm.com.cnblade<br>（2）.rhosts 文件：.rhosts 文件位于远程系统的根目录下，其中包含本地系统的名称和本地登录名。例如，远程系统的 .rhosts 文件中的项可能是：blade1 root；其中，blade1 是本地系统的名称，root 是本地登录名。这样，blade1 上的 root 即可在包含 .rhosts 文件的远程系统中来回复制文件。<br>配置过程：<br>（1）           在双方root用户根目录下建立.rhosts文件,并将双方的hostname加进去.在此之前应在双方的 /etc/hosts文件中加入对方的IP和hostname<br>（2）           把rsh服务启动起来,redhat默认是不启动的。方法：用执行ntsysv命令，在rsh选项前用空格键选中,确定退出。然后执行：service xinetd restart即可。如果没有rsh，请见下面rsh部分<br>（3）           到/etc/pam.d/目录下,把rsh文件中的auth required /lib/security/pam_securetty.so一行用“#”注释掉即可。（只有注释掉这一行，才能用root用户登录）<br>命令使用：<br>         rcp [options] [[user@]host1:]file1 …[[user@]host2:]file2<br>         options:　<br>-r 递归地把源目录中的所有内容拷贝到目的目录中。<br>-p 试图保留源文件的修改时间和模式，忽略umask。<br>rsh（remote shell，它不够安全）：rsh使用条件同rcp，rsh配置过程（以root为例）<br>（1）   在服务器上运行/urs/bin/ntsysv选中rexec,rlogin,rsh三项服务。<br>（2）   运行#/sbin/service xinetd restart启动该三项服务。<br>（3）   运行echo”rexec”&gt;&gt;/etc/securetty; echo”rlogin”&gt;&gt;/etc/securetty;  echo”rsh”&gt;&gt;/etc/securetty<br>（4）   在服务器上运行echo”你的ip地址root”&gt;&gt;/root/.rhosts或者echo”你的主机名root”&gt;&gt;/root/.rhosts且确保在服务器上的/etc/hosts中有主机名和ip地址的映射关系<br>（5）   到/etc/pam.d/目录下,把rexec, rlongin, rsh文件中的auth required /lib/security/pam_securetty.so 一行用“#”注释掉即可。（只有注释掉这一行，才能用root用户登录）<br>（6）   rsh命令用法：rshremote-sytem-neame Linux-command，例如：rsh blade1 ls /home/root<br>scp<br>scp 命令是 SSH中最方便有用的命令了，scp就是secure copy，是用来进行远程文件拷贝的。数据传输使用 ssh，并且和ssh 使用相同的认证方式，提供相同的安全保证。 与rcp 不同的是，scp 在需要进行验证时会要求你输入密码或口令。<br>scp [options] [本地用户名@IP地址:]file1 [远程用户名 @IP 地址 :] file2<br>        options:<br>             -v 用来显示进度，可以用来查看连接，认证，或是配置错误。<br>-C 使能压缩选项。<br>-c 选择使用那个加密算法（具体对应到ssh的-c cipher-spec，这个参数值会被传给ssh，可选择值3des，blowfish，des），使用blowfish会快很多，可以参看man ssh 中的-c cipher-spec<br>-P 选择端口<br>-r 递归拷贝整个目录<br>-l 限制使用带宽，Kbit/s<br>-o 指定传给ssh的一些参数值，比如Compression=yes<br>-p 保留文件的修改时间等信息。<br>rsync<br>rsync是rcp的替代品之一，rsync 是一款高效的远程数据备份和镜象工具，可快速地同步多台主机间的文件，其具有如下特性：<br>l  支持链接、所有者、组信息以及权限信息的拷贝；<br>l  通过远程 shell（ssh, rsh）进行传输；<br>l  无须特殊权限即可安装使用；<br>l  流水线式文件传输模式，文件传输效率高；<br>l  支持匿名操作；<br>需要提及的是 rsync 以其优越的性能优势区别于其它几种 Linux 文件传输方法，其同步文件的速度相当快，这主要归功于 rsync 所使用的传输算法。简而言之 rsync 算法能在相当短的时间内计算出需要备份的数据，只对源文件与目标文件的不同之处进行传输，从而降低网络中传输的数据量，以此达到快速备份镜像的目的。下面通过一典型应用场景来描述 rsync 算法的基本原理：主机 A 与主机 B 均有对同一文件的拷贝，用户对主机 A 上的拷贝进行更新，主机 B 通过 rsync 算法对更新后的文件进行同步。以下是该算法的实现步骤：<br>（1）      主机 B 将原始拷贝划分成大小为 N 的不重合的若干块（文件末尾部分分块大小可能不足 N），并对这些数据块进行两种不同方式的校验：32 位的滚动弱校验、128 位的 MD4 强校验。弱校验较之强校验计算速度快。<br>（2）      主机 B 将每个数据块的弱校验、强校验结果发送给主机 A 。<br>（3）      主机 A 对更新后的文件拷贝中的每个长度为 N 的数据块进行弱校验并与从 B 接收到的弱校验值进行匹配，若相同再进行强校验匹配。由于弱校验的滚动特性可以快速地筛选出需要进行同步的数据块。该算法的运算量主要集中在主机 A 上。<br>  通过上述计算，主机 A 将文件的不同部分发送给 B，B 接收到两个拷贝之间的不同之处，从而同步得到更新后的文件。通过如上方式，rsync 避免了对相同数据的传输，减少了网络带宽的浪费。在时间上整个过程中需一个往返，从某种程度上也保证了 rsync 的优越性能。<br>Rsync可以通过两种方式来连接远程服务器，一种是通过类shell命令的方式，一种是通过rsync daemon的方式，rsync daemon需要进行安装和配置，具体如下：<br>可从官方网站<a href="http://rsync.samba.org/" target="_blank" rel="noopener">http://rsync.samba.org/</a> 上下载安装 rsync 的最新版本。使用时需将 rsync 分别安装于服务端和客户端，服务端和客户端使用同一个 rsync 软件包来实现远程镜像和定期同步更新。需要说明的是一个 rsync 服务端可同时备份多个客户端的数据；多个服务端备份一个客户端的数据。 rsync 默认端口为 873，服务器在该端口接收客户的匿名或者认证方式的备份请求。<br>rsync 服务端在使用之前需要进行必要的配置，其配置文件为 /etc/rsyncd.conf，进行认证、访问、日志记录等控制。配置文件包括全局参数、模块参数的设置。 rsyncd.conf 文件中 [module] 之前的所有参数为全局参数，也可以在全局参数部分定义模块参数，在这种情况下该参数的值就是所有模块的默认值。全局参数设置程序使用的端口号，指定消息文件、日志文件 pid 文件以及发送日志消息的级别。模块参数主要定义服务端哪个目录需要被同步。用户可根据不同的需要指定多个模块，每个模块对应需要备份的一个目录树，即若有 N 个需要备份的目录树，则需要 N 个模块与之对应。模块中可以定义许多参数，常见参数如下。<br>l  Comment        模块信息描述，该描述连同模块名在客户连接得到模块列表时显示给客户。默认没有描述定义。<br>l  Path         指定供备份的目录路径，必须指定该参数。<br>l  max connections    指定最大并发连接数以保护服务器，超过限制的连接请求将被告知随后再试。默认值为 0，即没有限制。<br>l  log file     指定日志文件<br>l  read only         设定是否允许客户上载文件。若为 true 任何上载请求均会失败，若为 false 且客户端拥有服务器目录读写权限则可以上载。默认值为 true 。<br>l  write only        设定是否允许客户下载文件。若为 true 任何下载请求均会失败，默认值为 false 。<br>l  List        设定当客户请求可以使用的模块列表时，是否列出该模块。若为 false，则创建隐藏的模块。默认值为 true 。<br>l  fake super       允许文件享有所有权限，而无需后台服务以 root 权限进行操作。<br>l  Filter        设置过滤列表以决定哪些文件可由客户端访问。<br>l  hosts allow     指定允许客户连接的 IP 地址。可以为单个 IP 地址或整个网段。多个 IP或网段需要以空格隔开。默认是允许所有主机连接。<br>l  dont compress        指定不进行压缩处理即可传输的文件，默认值是 </em>.gz <em>.tgz </em>.zip <em>.z </em>.rpm <em>.deb </em>.iso <em>.bz2 </em>.tbz<br>l  pre-xfer exec, post-xfer exec          设置可在文件传输前／后执行的命令。若在文件传输前执行的命令失败，则取消本次传输操作。<br>需要注意的是服务器端启动：/usr/bin/rsync–daemon –config=/etc/rsyncd/rsyncd.conf<br>连接远程服务器的两种方式的基本语法<br>（1）      通过远程 shell 方式：<br>l  rsync [OPTION] [USER@]HOST:SRC DEST：用远程 shell（如 ssh, rsh）实现将远程机器的内容拷贝到本地机器。 SRC 地址路径中以单个冒号 “:” 进行分隔。<br>l  rsync [OPTION] SRC [USER@]HOST:DEST：使用远程 shell（如 rsh、ssh）实现本地机器的内容拷贝到远程机器。 DEST 地址路径中以单个冒号 “:” 进行分隔。<br>（2）       通过 rsync daemon 方式：<br>l  rsync [OPTION] [USER@]HOST::SRC DEST 或rsync [OPTION]rsync://[USER@]HOST[:PORT]/SRC [DEST]：从远程 rsync 服务器中拷贝文件到本地机。SRC 地址路径中以双冒号 “::” 进行分隔。<br>l  rsync [OPTION] SRC [USER@]HOST::DEST 或rsync [OPTION] SRCrsync://[USER@]HOST[:PORT]/DEST：从本地机器拷贝文件到远程 rsync 服务器中。 DEST 地址路径中以双冒号 “::” 进行分隔。<br>如果 rsync 命令中只指定 SRC 参数而不指定 DEST 参数，则意为显示源文件列表而非进行同步拷贝。<br>Options:<br>         options:<br>         -v,–verbose 详细模式输出<br>         -q,–quiet 精简输出模式<br>         -c,–checksum 打开校验开关，强制对文件传输进行校验<br>         -a,–archive 归档模式，表示以递归方式传输文件，并保持所有文件属性，等于-rlptgoD<br>         -r,–recursive 对子目录以递归模式处理<br>         -R,–relative 使用相对路径信息<br>         -b,–backup 创建备份，也就是对于目的已经存在有同样的文件名时，将老的文件重新命名为~filename。可以使用–suffix选项来指定不同的备份文件前缀。<br>         –backup-dir将备份文件(如~filename)存放在在目录下。<br>         -suffix=SUFFIX定义备份文件前缀<br>         -u,–update 仅仅进行更新，也就是跳过所有已经存在于DST，并且文件时间晚于要备份的文件。(不覆盖更新的文件)<br>         -l,–links 保留软链结<br>         -L,–copy-links 想对待常规文件一样处理软链结<br>         –copy-unsafe-links仅仅拷贝指向SRC路径目录树以外的链结<br>         –safe-links忽略指向SRC路径目录树以外的链结<br>         -H,–hard-links 保留硬链结<br>    -p,–perms 保持文件权限<br>         -o,–owner 保持文件属主信息<br>    -g, –group 保持文件属组信息<br>         -D,–devices 保持设备文件信息<br>    -t,–times 保持文件时间信息<br>         -S,–sparse 对稀疏文件进行特殊处理以节省DST的空间<br>         -n,–dry-run现实哪些文件将被传输<br>         -W,–whole-file 拷贝文件，不进行增量检测<br>         -x,–one-file-system 不要跨越文件系统边界<br>         -B,–block-size=SIZE 检验算法使用的块尺寸，默认是700字节<br>         -e,–rsh=COMMAND 指定使用rsh、ssh方式进行数据同步<br>         –rsync-path=PATH指定远程服务器上的rsync命令所在路径信息<br>         -C,–cvs-exclude 使用和CVS一样的方法自动忽略文件，用来排除那些不希望传输的文件<br>         –existing仅仅更新那些已经存在于DST的文件，而不备份那些新创建的文件<br>         –delete删除那些DST中SRC没有的文件<br>         –delete-excluded同样删除接收端那些被该选项指定排除的文件<br>         –delete-after传输结束以后再删除<br>         –ignore-errors及时出现IO错误也进行删除<br>         –max-delete=NUM最多删除NUM个文件<br>         –partial保留那些因故没有完全传输的文件，以是加快随后的再次传输<br>         –force强制删除目录，即使不为空<br>         –numeric-ids不将数字的用户和组ID匹配为用户名和组名<br>         –timeout=TIMEIP超时时间，单位为秒<br>         -I,–ignore-times 不跳过那些有同样的时间和长度的文件<br>         –size-only当决定是否要备份文件时，仅仅察看文件大小而不考虑文件时间<br>         –modify-window=NUM决定文件是否时间相同时使用的时间戳窗口，默认为0<br>         -T–temp-dir=DIR 在DIR中创建临时文件<br>         –compare-dest=DIR同样比较DIR中的文件来决定是否需要备份<br>         -P等同于 –partial<br>         –progress显示备份过程<br>         -z,–compress 对备份的文件在传输时进行压缩处理<br>         –exclude=PATTERN指定排除不需要传输的文件模式<br>         –include=PATTERN指定不排除而需要传输的文件模式<br>         –exclude-from=FILE排除FILE中指定模式的文件<br>         –include-from=FILE不排除FILE指定模式匹配的文件<br>         –version打印版本信息<br>         –address绑定到特定的地址<br>         –config=FILE指定其他的配置文件，不使用默认的rsyncd.conf文件<br>         –port=PORT指定其他的rsync服务端口<br>         –blocking-io对远程shell使用阻塞IO<br>         -stats给出某些文件的传输状态<br>         –progress在传输时现实传输过程<br>         –log-format=formAT指定日志文件格式<br>         –password-file=FILE从FILE中得到密码<br>         –bwlimit=KBPS限制I/O带宽，KBytes per second<br>    -h,–help 显示帮助信息</p><p>实例：<br>（1）      查看服务端文件及列表：<br>l  rsync 9.186.110.53::查看服务端可用的模块列表以及注释信息；rsync <a href="mailto:ibmuser@9.186.110.53" target="_blank" rel="noopener">ibmuser@9.186.110.53</a>::www/查看服务端 www 模块中的目录及文件列表（使用 rsyncd 用户认证方式）<br>l  rsync <a href="mailto:ibmuser@9.186.110.53" target="_blank" rel="noopener">ibmuser@9.186.110.53</a>:/var/www/html/查看服务端/var/www/html 目录中的内容（使用服务端的系统用户进行验证，如 ibmuser）<br>（2）      保持客户端与服务端的数据同步：<br>l  rsync -avz <a href="mailto:ibmuser@9.186.110.53" target="_blank" rel="noopener">ibmuser@9.186.110.53</a>::www/ /backup1/使用后台服务方式将服务端www 模块下的内容备份到本地 /backup1 目录中，备份时保留原有权限、属性、属主及符号连接等，并使用压缩方式加快数据传输。<br>l   rsync – <a href="mailto:avzibmuser@9.186.110.53" target="_blank" rel="noopener">avzibmuser@9.186.110.53</a>:/var/www/html /backup2/使用 ssh 方式将远程的/var/www/html 目录备份到本地 /backup2/ 目录下<br>l   rsync -avz <a href="mailto:--deleteibmuser@9.186.110.53" target="_blank" rel="noopener">--deleteibmuser@9.186.110.53</a>::www/ /backup3/将远程 www 模块备份到本地/backup3/ 目录中，同时进行同步目录，删除本地目录中多余的文件。<br>（3）      当服务端的数据出现问题时，需要通过客户端的数据对服务端进行恢复，只要客户端有服务端的写入权限，即可通过调换 rsync 命令的 SRC、DEST 参数进行恢复。</p><p>ftp<br>         ftp命令使用文件传输协议(FileTransfer Protocol ,FTP)在本地主机和远程主机之间或者两个远程主机之间进行文件传输。FTP 协议允许数据在不同文件系统的主机之间传输。尽管这个协议在传输数据上提供了高适应性，但是它并没有尝试去保留一个特定文件系统上的文件属性（例如一个文件的保护模式或者修改次数）。而且 FTP 协议很少对一个文件系统的整体结构作假定，也不提供这样的功能，比如递归的拷贝子目录。在使用 ftp 命令时，需要注意 FTP 协议的这些特性。当需要保留文件属性或者需要递归的拷贝子目录时，可以使用 rcp/scp 等命令。<br>         如果需要将文件以ftp传输到目的服务器上，必须在目的服务器上安装ftp server，基本的安装和启动过程如下：<br>根据服务对象的不同，FTP服务可以分为两类：一类是系统FTP服务器，它只允许系统上的合法用户使用；另一类是匿名FTP服务器，它允许任何人登录到FTP服务器，和服务器连接后，在登录提示中输入Anonymous，即可访问服务器。<br>Yum list <em>ftp</em>  （找到可用的Ftp包）<br>sudo yum install ftp包<br>手工启动和关闭：启动：/usr/sbin/ftprestart  关闭：/usr/sbin/ftpshut<br>FTP服务器的配置：为了确保FTP服务器安全，必须设置一些重要的配置文件，以更好地控制用户的访问权限。这些配置文件是：/etc/ftpusers；/etc/ftpconversions；/etc/ftp-groups；/etc/ftpphosts；/etc/ftpaccess。利用这些文件，能够非常精确地控制哪些人、在什么时间、从什么地点可以连接服务器，并且可以对他们连接后所做的工作进行检查跟踪。<br>（1）       /etc/ftpusers：该文件夹中包含的用户不能通过FTP登录服务器，有时将需要禁止的用户账号写入文件/etc/ftpuser中，这样就可以禁止一些用户使用FTP服务。<br>（2）      /etc/ftpconversions：用来配置压缩/解压缩程序。<br>（3）      /etc/ftpgroups：创建用户组，这个组中的成员预先定义可以访问FTP服务器。<br>（4）      /etc/ftpphosts：用来根据禁止或允许远程主机对特定账户的访问，例如：allow czc 192.168.0.0/24   deny cdd 10.0.0.0/8（表示允许czc用户从192.168.0这个网段连线访问，拒绝cdd从10.这个网段连线访问）。<br>（5）      /etc/ftpaccess：是非常重要的一个配置文件，用来控制存取权限，文件中的每一行定义一个属性，并对属性的值进行设置。下面对它的一些常用配置做一点介绍：<br>l  定义用户类别：格式：class[类名] [real/guest/anonymous][IP地址]  功能：这个指令的功能设定FTP服务器上用户的类别。并可对客户端的IP地址进行限制，允许特定或者全部的IP地址访问FTP服务器。<br>l  登录重试次数：在命令行中输入：loginfails 10，这表明如果10次还没有登录成功就切断连线。<br>l  密码检查：格式：passwd-check〈strictness〉 warn。是对匿名用户的密码使用方式的检查，其中〈strictness〉是三个可能的字符串之一：None、Trivial、RFC822。若选None，表示将不对口令做任何检查；若选Trivial，表示对口令有一定的要求，它需要在口令中至少要有一个@符号；若选RFC822，则表示最严格，要求E-mail地址必须遵守RFC822报文标题标准（如：<a href="mailto:czc@domain.com" target="_blank" rel="noopener">czc@domain.com</a> ）。例如：passwd-check rfc822 warn，表明密码的要求很严格，当密码不符合规定时出现警告信息。<br>l  登录人数的限制：格式：limit[类别] [人数] [时间] [文件名]。设置指定类别在约定时间内可以登录FTP的人数。例如：limit remote Any/etc/many.msg，说明类别Remote类别在任何时间内登录人数不超过20个人，否则会显示Many.msg警告信息。<br>安装、配置好FTP服务器后，只需要在命令提示符后输入：FTP Servername，用主机名或希望连接的FTP服务器的IP地址代替Servername，按照提示输入用户名和口令，然后用标准的Linux上移或下移FTP服务器目录结构。另外，也可以采用图形化FTP程序，包括窗口式gFTP，可以借助Web浏览器去访问FTP服务器。<br>         在登录上ftp后，可以使用如下ftp命令进行操作：<br>l  FTP&gt; ! 从 ftp 子系统退出到外壳<br>l  FTP&gt; ? 显示 ftp 命令说明，和 help 相同，格式:? [command]说明:[command]指定需要帮助的命令名称。假如没有指定 command,linux ftp命令参数将显示全部命令的列表。<br>l  FTP&gt; append 使用当前文档类型配置将本地文档附加到远程电脑上的文档。格式:append local-file [remote-file]，说明:local-file 指定要添加的本地文档，remote-file指定要添加 local-file 的远程电脑上的文档。假如省略了 remote-file,本地文档名将被用作远程文档名。<br>l  FTP&gt; ascii 将文档传送类型配置为默认的 ASCII。说明:linux ftp命令参数支持两种文档传送类型,ASCII 码和二进制图像，在传送文本文档时应该使用ASCII。<br>l  FTP&gt; bell 转换响铃以在每个文档传送命令完成后响铃??默认情况下,铃声是关闭的。<br>l  FTP&gt; binary(或bi) 将文档传送类型配置为二进制<br>l  FTP&gt; bye(或by) 结束和远程电脑的linux ftp命令参数会话并退出linux ftp命令参数。<br>l  FTP&gt; cd 更改远程电脑上的工作目录。格式:cd remote-directory，说明:remote-directory 指定要更改的远程电脑上的目录。<br>l  FTP&gt; close 结束和远程服务器的linux ftp命令参数会话并返回命令解释程式。<br>l  FTP&gt; debug 转换调试。当调试打开时,发送到远程电脑的每个命令都打印,前面是字符串”&gt;”。默认情况下,调试是关闭的。<br>l  FTP&gt; delete 删除远程电脑上的文档。格式:delete remote-file，说明:remote-file 指定要删除的文档。<br>l  FTP&gt; dir 显示远程目录文档和子目录列表。格式:dir [remote-directory] [local-file]，说明:remote-directory 指定要查看其列表的目录。假如没有指定目录,将使用远程电脑中的当前工作目录。Local-file 指定要存储列表的本地文档。假如没有指定,输出将显示在屏幕上。<br>l  FTP&gt; disconnect 从远程电脑断开,保留linux ftp命令参数提示。<br>l  FTP&gt; get 使用当前文档转换类型将远程文档复制到本地，格式:get remote-file [local-file]，说明:remote-file 指定要复制的远程文档，Local-file指定要在本地电脑上使用的名称，假如没有指定,文档将命名为 remote-file。<br>l  FTP&gt;glob 转换文档名组合，组合允许在内部文档或路径名中使用通配符(<em>和?)，默认情况下,组合是打开的。<br>l  FTP&gt;hash 转换已传输的每个数据块的数字签名 (#) 打印，数据块的大小是2048 字节，默认情况下,散列符号打印是关闭的。<br>l  FTP&gt;help 显示linux ftp命令参数命令说明。格式:help [command]，　　说明:command 指定需要有关说明的命令的名称，假如没有指定 command,linux ftp命令参数将显示全部命令的列表。<br>l  FTP&gt;lcd 更改本地电脑上的工作目录，默认情况下,工作目录是启动linux ftp命令参数的目录。格式:lcd [directory]，说明:directory 指定要更改的本地电脑上的目录，假如没有指定directory,将显示本地电脑中当前的工作目录。<br>l  FTP&gt;literal 将参数逐字发送到远程linux ftp命令参数服务器，将返回单个的linux ftp命令参数回复代码，格式:literal argument [ …]，说明:argument 指定要发送到linuxftp命令参数服务器的参数。<br>l  FTP&gt;ls 显示远程目录文档和子目录的缩写列表，格式:ls [remote-directory] [local-file]，说明:remote-directory 指定要查看其列表的目录，假如没有指定目录,将使用远程电脑中的当前工作目录，local-file 指定要存储列表的本地文档??假如没有指定,输出将显示在屏幕上。<br>l  FTP&gt;mdelete 删除远程电脑上的文档，格式:mdelete remote-files [ …]，说明:remote-files 指定要删除的远程文档。<br>l  FTP&gt;mdir 显示远程目录文档和子目录列表，能够使用 mdir 指定多个文档，格式:mdir remote-files [ …] local-file，说明:remote-files 指定要查看列表的目录，必须指定 remote-files，请键入 - 使用远程电脑上的当前工作目录。local-file 指定要还原列表的本地文档，请键入- 在屏幕上显示列表。<br>l  FTP&gt;mget 使用当前文档传送类型将远程文档复制到本地电脑，格式:mget remote-files [ …]，说明:remote-files 指定要复制到本地电脑的远程文档。<br>l  FTP&gt;mkdir 创建远程目录，格式:mkdir directory，说明:directory 指定新的远程目录的名称。<br>l  FTP&gt;mls 显示远程目录文档和子目录的缩写列表，格式:mls remote-files [ …] local-file，说明:remote-files 指定要查看列表的文档??必须指定remote-files;，请键入- 使用远程电脑上的当前工作目录。local-file 指定要存储列表的本地文档，请键入 - 以在屏幕上显示列表。<br>l  FTP&gt;mput 使用当前文档传送类型将本地文档复制到远程电脑上。格式:mput local-files [ …]，说明:local-files 指定要复制到远程电脑的本地文档。<br>l  FTP&gt;open 和指定的linux ftp命令参数服务器连接，格式:open computer [port]，说明:computer 指定要连接的远程电脑??能够通过 IP 地址或电脑名称指定电脑(DNS 或主机文档必须可用)，假如自动登录打开(默认),ftp 还将尝试自动将用户登录到linux ftp命令参数服务器port 指定用来联系linux ftp命令参数服务器的端口号。<br>l  FTP&gt;prompt 转换提示，假如关闭提示时 mget 及 mput 传送任何文档,linux ftp命令参数在多文档传送过程中将提示允许您有选择地检索或存储文档，默认情况下,提示是打开的。<br>l  FTP&gt;put 使用当前文档传送类型将本地文档复制到远程电脑上，格式:put local-file [remote-file]，说明:local-file 指定要复制的本地文档，remote-file指定要在远程电脑上使用的名称??假如没有指定,文档将命名为 local-file。　　<br>l  FTP&gt;pwd 显示远程电脑上的当前目录。<br>l  FTP&gt;quit 结束和远程电脑的linux ftp命令参数会话并退出linux ftp命令参数。<br>l  FTP&gt;quote 将参数逐字发送到远程linux ftp命令参数服务器，将返回单个的linux ftp命令参数回复代码。<br>l  FTP&gt;recv 使用当前文档传送类型将远程文档复制到本地电脑，Recv 和 get相同。格式:recv remote-file [local-file]，说明:remote-file 指定要复制的远程文档，local-file指定要在本地电脑上使用的名称，假如没有指定,文档将命名为 remote-file。<br>l  FTP&gt;remotehelp 显示远程命令帮助，格式:remotehelp [command]，说明:command 指定需要帮助的命令的名称，假如没有指定 command,linux ftp命令参数将显示全部远程命令的列表。<br>l  FTP&gt;rename 重命名远程文档，格式:rename filename newfilename，说明:filename 指定要重命名的文档，newfilename指定新的文档名。<br>l  FTP&gt;rmdir 删除远程目录，格式:rmdir directory，说明:directory 指定要删除的远程目录的名称。<br>l  FTP&gt;send 使用当前文档传送类型将本地文档复制到远程电脑上，Send 和put 相同，格式:send local-file [remote-file]，说明:local-file 指定要复制的本地文档，remote-file指定要在远程电脑上使用的名称，假如没有指定,文档将命名为 local-file。<br>l  FTP&gt;status 显示linux ftp命令参数连接和转换的当前状态。<br>l  FTP&gt;trace 转换数据包跟踪，Trace 在运行linux ftp命令参数命令时显示每个数据包的路由。<br>l  FTP&gt;type 配置或显示文档传送类型，格式:type [type-name]，说明:type-name 指定文档传送类型，默认配置为 ascii，假如没有指定type-name,将显示当前的类型。<br>l  FTP&gt;user 指定远程电脑的用户，格式:user username [password] [account]，说明:user-name 指定登录到远程电脑所使用的用户名，password 指定 user-name 的密码，假如没有指定,但必须指定,linux ftp命令参数会提示输入密码。account 指定登录到远程电脑所使用的帐户，假如没有指定account,但是需要指定,linux ftp命令参数会提示您输入帐户。<br>l  FTP&gt;verbose 转换 verbose 模式，假如打开,将显示任何 linux ftp命令参数响应，在文档传送完成后,将同时显示和传送效率有关的统计信息，默认情况下,verbose 是打开的。<br>sftp<br>         sftp（安全文件传输协议）与ftp 有着几乎一样的语法和功能。FTP 为 SSH的一部份，是一种传输档案至 Blogger 伺服器的安全方式。它并不使用ftp守护进程（ftpd或wu-ftpd）来进行连接，而是有意义地增强系统的安全性。实际上，通过监视一些系统中的log文件，可以注意到很多攻击是针对于ftpd守护进程的。sftp避免了这些攻击从而可以停止在wu-ftpd上潜在的危险。SFTP本身没有单独的守护进程，它必须使用sshd守护进程（端口号默认是22）来完成相应的连接操作。使用SFTP是非常安全的。但是，由于这种传输方式使用了加密/解密技术，所以传输效率比普通的FTP要低得多，如果您对网络安全性要求更高时，可以使用SFTP代替FTP。<br>用法举例：<br>（1）      <a href="mailto:sftproot@10.48.30.192" target="_blank" rel="noopener">sftproot@10.48.30.192</a>:/root/test.sh（直接将192上的文件复制到本地）<br>（2）      <a href="mailto:sftproot@10.48.30.192" target="_blank" rel="noopener">sftproot@10.48.30.192</a>:/root  （直接连接到192的root目录下，这样就可以使用getput等命令了）<br>         sftp使用在数据连接上使用ssh2，所以文件的传输是尽可能地安全。使用sftp代替ftp两个主要的的原因是：<br>（1）      password从不用明文传输，防止sniffer（嗅探器）的攻击。<br>（2）      数据在传输时被加密，使用刺探和修改连接非常困难。<br>         使用sftp2是非常简单的。让我们假设你使用了你的帐户：myname通过sftp连按上了主机host1。可以使用命令：sftp myname@host1。当sftp2准备好了来接受连接时，它将显示一个状态提示符 sftp&gt;。在sftp手册中有完整的用户可以使用的命令列表；其中有：<br>l  quit：从这个应用程序中退出。<br>l  cd directory：改变当前的远程工作目录。<br>l  lcd directory：改变当前的本地工作目录。<br>l  ls [ -r ] [ -l ] [ file … ]：列出在远地服务器上的文件名。如果是目录，则列出目录的内容。当命令行中指定了-r，则递归地显示目录树。（默认情况下，子目录并不被访问）。当命令行中指定了-l，文件与目录的权限，属主，大小和修改时间被列出。当没有参数被指定，则.（当前目录）的内容被列出。普通情况下选项-r和-l是互相不兼容的。<br>l  lls [ -r ] [ -l ] [ file … ]：与ls一样，但是是对于本地文件操作。<br>l  get [file …]：从远程端传送指定的文件到本地端。目录内容被递归地复制。<br>l  put [ file … ]：从本地端传送指定的文件到远地端。目录内容被递归地复制。<br>l  mkdir dir (rmdir dir)：尝试建立或删除参数中指定的目录。<br>l  通配符对于ls,lls,get和put是支持的。格式在sshregex手册中有描述。<br>从sftp使用加密技术以来，一直有一个障碍：连接速度慢（有2-3倍），但是这一点对于非常好的安全性来讲只能放在一边了。在一个测试中，局域网上的sniffer可以在一个小时中捉住ftp连接上的4个password.。sftp的使用可以从网络上传送文件并且除去这些安全问题。<br>lftp<br>lftp 是一个功能强大的下载工具，它支持访问文件的协议: ftp, ftps, http, https, hftp, fish.(其中ftps和https需要在编译的时候包含openssl库)。llftp非常像一个shell: 有命令补全，历史记录，允许多个后台任务执行等功能，使用起来非常方便。它还有书签、排队、镜像、断点续传、多进程下载等功能。<br>命令行语法<br>(1)    lftp [-d] [-e cmd] [-p port][-u user[,pass]] [site]<br>-e在选择后执行命令<br>-u [,] 使用指定的用户名/口令进行验证<br>-p 连接指定的端口<br>Site:主机名，URL 或书签的名字<br>(2)    lftp -f script_file<br>执行文件中的命令后退出<br>(3)    lftp -c commands<br>执行命令后退出<br>(4)    lftp –version<br>显示 lftp 版本后退出<br>(5)    lftp –help<br>显示帮助信息后退出<br>         例子：<br>（1）      如果在命令行中输入的站点名称，lftp将直接登录站点，比如<br>lftp ftp://………….<br>（2）      如果在命令行不输入站点名称，则必须在进入到lftp界面后用open命令打开<br>Lftp<br>lftp :~&gt; open ftp://……………….<br>常用命令<br>l  下载单个文件和一组文件，断点续传用-c参数<br>lftp …………….:/&gt; get -c ls-lR.txt<br>lftp ……………:/&gt; mget </em>.txt<br>l  镜像(反镜像即上传)一个目录，可以用多个线程并行镜像一个目录(–parallel=N)<br>lftp …………….:/&gt; mirror incoming local_name<br>lftp …………….:/&gt; mirror -R local_name<br>lftp …………….:/&gt; mirror –parallel=3 incominglocal_name<br>l  多线程下载，类似网络蚂蚁的功能;缺省是5个线程<br>lftp …………….:/&gt; pget -n 4 ls-lR.txt<br>l  后台任务管理<br>缺省情况下，按 Ctrl+z,正在执行的任务将转为后台执行，也可以在命令行末尾加&amp;符号使任务在后台执行。用jobs命令可以查看所有的后台进程。用queue命令可以排队新的任务。如果退出lftp是还有任务在后台执行，lftp将转为后台执行。<br>l  其它用法<br>lftp支持类似bash的管道操作，例如用下面的命令可以将ftp服务器上的特定目录下(也可以是整个站点)所有文件的大小存到本地的文件ls.txt中<br>lftp …………….:/&gt; du incoming &gt; ls.txt<br>相关文件<br>（1）      /etc/lftp.conf<br>全局配置文件，实际位置依赖系统配置文件目录，可能在/etc，也可能在/usr/local/etc<br>（2）      ~/.lftp/rc, ~/.lftprc<br>用户配置文件，将在/etc/lftp.conf之后执行，所以这里面的设置会覆盖/etc/lftp.conf中的设置。<br>（3）      lftp 缺省不会显示 ftp 服务器的欢迎信息和错误信息，这在很多时候不方便，因为你有可能想知道这个服务器到底是因为没开机连不上，还是连接数已满。如果是这样，你可以在 ~/.lftprc 里写入一行，debug 3，就可以看到出错信息了。更多的配置选项请查man手册或在lftp界面内用命令 set -a 获得。<br>（4）      ~/.lftp/log<br>当lftp转为后台非挂起模式执行时，输出将重定向到这里<br>（5）      ~/.lftp/bookmarks<br>这是lftp存储书签的地方，可以lftp查看bookmark命令<br>（6）      ~/.lftp/cwd_history<br>这个文件用来存储访问过的站点的工作目录<br>（7）      ~/.lftprc<br>在用lftp访问国内一些ftp服务器时，往往看到的中文是乱码。不用慌，这是由于服务器和本地编码不一致造成的。我们只要在主目录下新建一个文件~/.lftprc或者~/.lftp/rc。并在其中加入以下内容：debug 3set ftp:charset GBKset file:charset UTF-8#setftp:passtive-mode no#alias utf8 “ set ftp:charset UTF-8”#alias gbk” set ftp:charset GBK”<br>登录ftp服务器：<br>         lftp<a href="ftp://user:password@site:port" target="_blank" rel="noopener">ftp://user:password@site:port</a><br>         lftpuser:password@site:port<br>         lftpsite -p port -u user,password<br>         lftpsite:port -u user,password<br>上面的几种方式都能正常工作，不过密码都是明文，这样好像不太安全哦。没关系，使用lftp user@site:port，系统会提示输入password，密码就回显为<strong>**</strong>了，不过每次都输入这么多，好麻烦哦。如果有类似leapftp的站点管理器就好了，其实lftp早就给我们想好了：这就是bookmark。后面我们将会看到。<br>         在终端运行如manlftp或登录ftp后输入help就可以看到命令列表，下面我们看一下lftp常用的命令：<br>（1）      ls：显示远端文件列表(!ls显示本地文件列表)。<br>（2）      cd：切换远端目录(lcd 切换本地目录)。<br>（3）      get：下载远端文件。<br>（4）      mget：下载远端文件(可以用通配符也就是 *)。<br>（5）      pget：使用多个线程来下载远端文件, 预设为五个。<br>（6）      mirror：下载/上传(mirror-R)/同步整个目录。<br>（7）      put：上传文件。<br>（8）      mput：上传多个文件(支持通配符)。<br>（9）      mv：移动远端文件(远端文件改名)。<br>（10）  rm：删除远端文件。<br>（11）  mrm：删除多个远端文件(支持通配符)。<br>（12）  mkdir：建立远端目录。<br>（13）  rmdir：删除远端目录。<br>（14）  pwd：显示目前远端所在目录(lpwd显示本地目录)。<br>（15）  du：计算远端目录的大小<br>（16）  !：执行本地 shell的命令(由于lftp 没有 lls, 故可用 !ls 来替代)<br>（17）  Lcd：切换本地目录<br>（18）  Lpwd：显示本地目录<br>（19）  Alias：定义别名<br>（20）  Bookmark：设定书签。<br>（21）  Exit：退出ftp<br>（22）  快捷书签：ftp中的bookmark命令，是将配置写到~/.lftp/bookmarks文件中；我们可以直接修改此文件，快速登陆ftp服务器。<br>wget<br>wget 是一个经由 GPL 许可的可从网络上自动获取文件的自由软件包。它是一个非交互式的命令行工具。支持 HTTP，HTTPS 和 FTP 协议，支持代理服务器以及断点续传功能。 wget 可实现递归下载，即可跟踪 HTML 页面上的链接依次下载来创建远程服务器的本地版本，完全重建原始站点的目录结构，实现远程网站的镜像。在递归下载时，wget 将页面中的超级链接转换成指向本地文件，方便离线浏览。由于非交互特性，wget 支持后台运行，用户在退出系统后，仍可继续运行。功能强大，设置方便简单。<br>基本语法: wget [options][URL-list]<br>         Options:</p><pre><code>-r    递归下载服务器上所有的目录和文件。由 -l选项来指定递归深度。-b   后台下载-m  制作站点镜像-c    指定断点续传功能。该功能要求服务器支持断点续传。-I    指定下载目录列表，可实现批量下载-A/-R       指定接受／拒绝下载列表，实现选择性地下载--proxy=on/off        指定是否利用代理服务器进行下载-t,--tries=NUMBER         最大尝试链接次数 (0 表示无限制，默认为 20 次 )-nc,--no-clobber     不覆盖已存在的文件-N,--timestamping          只下载比本地新的文件-nd--no-directories         不进行目录结构创建-x,--force-directories      强制创建目录结构-nH,--no-host-directories       不继承主机目录结构-P,--directory-prefix=PREFIX 设置目录前缀</code></pre><p>例子：递归下载 <a href="http://www.ibm.com.cn" target="_blank" rel="noopener">http://www.ibm.com.cn</a> 站点的信息。下载所有显示完整网页所以需要的文件，如图片等。在下载不进行上层目录搜索并将绝对链接转换为相对链接。<br>   wget -r -p -np -k <a href="http://www.ibm.com.cn" target="_blank" rel="noopener">http://www.ibm.com.cn</a><br>    将在本地硬盘建立<a href="http://www.ibm.com.cn" target="_blank" rel="noopener">http://www.ibm.com.cn</a> 的镜像，镜像文件存入当前目录下一个名为 <a href="http://www.ibm.com.cn" target="_blank" rel="noopener">www.ibm.com.cn</a> 的子目录中（也可以使用 -nH 参数指定不建立该子目录，而直接在当前目录下建立镜像的目录结构），递归深度为 4，重试次数为无穷（若连接出现问题，wget 将永远重试下去，直至任务完成）<br>   wget -m -l4 -t0 <a href="http://www.ibm.com.c" target="_blank" rel="noopener">http://www.ibm.com.c</a><br>    使用代理进行下载，并实现断点续传。代理可以在环境变量 PROXY 或 wgetrc 文件中设定。 -c 选项要求服务支持断点续传。<br>   wget -Y on -c <a href="http://www.ibm.com.cn" target="_blank" rel="noopener">http://www.ibm.com.cn</a><br>curl<br>curl是对 libcurl 库的一个命令行工具包装。libcurl 库中提供了相应功能的 API，可以在程序中调用。 curl 使用 URL 的语法来传输文件，它支持 FTP, FTPS, HTTP, HTTPS, TFTP, SFTP, TELNET 等多种协议。 curl 功能强大，它提供了包括代理支持，用户认证，FTP 上载，HTTP post，SSL 连接，文件续传等许多特性。<br>基本语法：curl [options …] <url></url></p><pre><code>其中下载参数大约有 80 多个，curl 的各个功能完全依靠这些参数来完成。下面举例说明 curl 的一些基本用法。</code></pre><p>使用实例：<br>（1）      获取 GNU 的主页curl  <a href="http://www.gnu.org" target="_blank" rel="noopener">http://www.gnu.org</a><br>（2）      获取 GNU 的 FTP 服务器上根目录下的 README 文件curl <a href="ftp://ftp.gnu.org/README" target="_blank" rel="noopener">ftp://ftp.gnu.org/README</a><br>（3）      从一个字典中获取 curl 的定义curl dict://dict.org/m:curl<br>（4）      如果需要指定用户名和密码的话，可以在 url 中指定，或者使用 -u 参数curl <a href="ftp://name:passwd@machine.domain:port/full/path/to/file或者curl" target="_blank" rel="noopener">ftp://name:passwd@machine.domain:port/full/path/to/file或者curl</a> -uname:passwd <a href="ftp://machine.domain:port/full/path/to/file" target="_blank" rel="noopener">ftp://machine.domain:port/full/path/to/file</a><br>（5）      curl 会将从指定 url 处获取的内容打印到标准输出上。如果需要保存在本地文件中，可以使用 -o，或使用 -O 参数指定使用远程主机上的文件名（如果 url 中没有给出文件名的部分，则此操作将会失败）curl -o gnu.html <a href="http://www.gnu.org" target="_blank" rel="noopener">http://www.gnu.org</a> 或者curl -O http:///<a href="http://www.gnu.org/index.htm" target="_blank" rel="noopener">www.gnu.org/index.htm</a></p><p>（6）      使用 -x 选项来使用代理进行连接curl -x my-proxy:port <a href="ftp://ftp.somesite.com/READMEN" target="_blank" rel="noopener">ftp://ftp.somesite.com/READMEN</a><br>（7）       通过使用 curl 的 -T 选项来进行上载curl -T - <a href="ftp://ftp.upload.com/upfile，此命令从标准输入读取数据，并上载至远程" target="_blank" rel="noopener">ftp://ftp.upload.com/upfile，此命令从标准输入读取数据，并上载至远程</a> FTP 服务器上的 upfile 文件中。也可以指定上载一个本地文件curl -T localfile -a <a href="ftp://ftp.upload.com/upfile其中" target="_blank" rel="noopener">ftp://ftp.upload.com/upfile其中</a> -a 参数表示以添加方式将localfile 中的内容附加到 upfile 的末尾。<br>总的来说，curl 适合用来进行自动的文件传输或操作序列，它是一个很好的模拟用户在网页浏览器上的行为的工具。尤其当需要在程序中调用时，libcurl 是个很好的选择。<br>传输速度<br>         因为经常在服务器见进行文件传输，就对传输速度和带宽有要求，这里总结一下可以影响以上rcp,scp,rsync,ftp,sftp,lftp,wget,curl这6个命令的传输速度和带宽的参数：<br>(1)    rcp：没有参数可以调整带宽和传输速度<br>(2)    scp：如果传输的文件没有压缩，可以使用-C参数（-C 使能压缩选项）。-c 选择使用那个加密算法，具体对应到ssh的-c cipher-spec，这个参数值会被传给ssh，可选择值3des，blowfish，des），使用blowfish会快很多，可以参看man ssh 中的-c cipher-spec。可以使用-l 限制使用带宽，Kbit/s。避免因为传输文件而影响其他程序使用带宽。-o ssh_option使用ssh选项<br>(3)    rsync:-B, –block-size=SIZE 检验算法使用的块尺寸，默认是700字节；-z, –compress 对备份的文件在传输时进行压缩处理；–bwlimit=KBPS 限制I/O带宽，KBytes per second ；-e, –rsh=COMMAND 指定使用rsh、ssh方式进行数据同步<br>(4)    ftp：FTP&gt;ascii 将文档传送类型配置为默认的 ASCII。说明:linux ftp命令参数支持两种文档传送类型,ASCII 码和二进制图像，在传送文本文档时应该使用ASCII。Binary二进制传输。<br>(5)    sftp: -B buffer_size， -C使用压缩，-ossh_option使用ssh选项<br>(6)    lftp：可以调整进程数等<br>(7)    wget: –limit-rate=amount限制带宽。<br>(8)    curl：-B/–use-ascii和–ciphers<list of ciphers>，–compressed等。<br>总结<br>（1）      传输性能：wget 通过支持后台执行及断点续传提高文件传输效率； rsync 则以其高效的传输及压缩算法达到快传输的目的。<br>（2）       配置难度：rcp 只需进行简单的配置，创建.rhost文件以及设置/etc/hosts文件中主机名与IP地址列表； wget设置方便简单，只需在客户端指定参数执行命令即可； rsync 在使用前需要对服务端/etc/rsyncd.conf 进行参数设定，配置内容相对复杂。<br>（3）      安全性能：ftp、rcp不保证传输的安全性，scp、rsync则均可基于ssh 认证进行传输，提供了较强的安全保障。wget 也可通过指定安全协议做到安全传输。<br>通过上述的对比不难发现，每种文件传输方法基于其自身的特点与优势均有其典型的适用场景：<br>（1）      ftp 作为最常用的入门式的文件传输方法，使用简单，易于理解，并且可以实现脚本自动化；但是需要安装ftp server才可以访问远程ftp server<br>（2）      rcp 相对于ftp可以保留文件属性并可递归的拷贝子目录；<br>（3）      scp 利用ssh传输数据，并使用与ssh相同的认证模式，相对于rcp提供更强的安全保障；<br>（4）      wget实现递归下载，可跟踪HTML页面上的链接依次下载来创建远程服务器的本地版本，完全重建原始站点的目录结构，适合实现远程网站的镜像；<br>（5）      curl 则适合用来进行自动的文件传输或操作序列，是一个很好的模拟用户在网页浏览器上的行为的工具；<br>（6）      rsync 更适用于大数据量的每日同步，拷贝的速度很快，相对wget来说速度快且安全高效。<br>（7）      sftp使用在数据连接上使用ssh2，所以文件的传输是尽可能地安全。但传输速度慢。是ftp的替代品，比ftp安全，不能访问http资源。<br>（8）      lftp可以访问ftp资源，也可以访问http资源。支持断点续传，多进程下载。</list></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;•┈┈┈┈┈┈୨୧┈┈┈┈┈┈•&lt;br&gt;
    
    </summary>
    
    
      <category term="linux" scheme="http://yoursite.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>安娜姐姐分享的一个公众号文章</title>
    <link href="http://yoursite.com/2019/05/30/%E5%A9%9A%E5%90%8E/"/>
    <id>http://yoursite.com/2019/05/30/婚后/</id>
    <published>2019-05-30T07:43:06.000Z</published>
    <updated>2019-05-30T01:30:06.000Z</updated>
    
    <content type="html"><![CDATA[<p>婚外情十诫<br>原文链接🔗:<a href="https://mp.weixin.qq.com/s/VkZk_bSsGjXpiNQ67Rvh-A" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/VkZk_bSsGjXpiNQ67Rvh-A</a></p><p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=435278010&auto=1&height=66"></iframe><br>•┈┈┈┈┈┈୨୧┈┈┈┈┈┈•<br><a id="more"></a><br>上次那篇由许美静演唱会引起话题的文章发布后，我在后台收到好几位读者的信息，都在讲诉自己现在或者是既往感情上的遭遇，有妻子身份的，也有情人身份的。感谢你们的信任，如果那篇文章带给了你们一些慰藉，善莫大焉。</p><p>因为无法一一回复，作为一个旁观了许多故事的野生恋爱观察员，我就在这里聊聊关于婚外情的几个观点吧。因为发来信息的都是女生，我就只站在女性的角度来说了。本文仅就婚外情状态下的男性进行评议，诸多对感情忠贞对家庭诚实的好丈夫不在此列。</p><p>一，爱不爱、爱多少，并不是重点</p><p>很多身为婚外情人的姑娘，或者是遭遇伴侣背叛的妻子，都会纠结一个问题：他到底爱不爱我，到底爱谁更多？</p><p>其实，爱不爱根本不是两难的重点，在选择配偶的时候，男人比你认为的现实得多。</p><p>我看到过有年轻帅哥选择了比自己年长、其貌不扬的大姐，因为大姐是业界前辈，可以为他后面的发展铺平道路；我也看到过长发飘飘的文艺男年轻时在一众文艺女青年里打滚，最后片叶不沾身地和企业家之女结了婚；我也见过六十多岁老头在选择续弦对象时，首要考虑因素是身体健康能在日后照顾自己。</p><p>他们的考量指标远远不只有爱这一个维度，甚至都不是权重最高的维度。相比对世界和婚姻还会抱有天真错觉的女性，男性对生存环境中的竞争性有更清醒的认识，会把伴侣的社会地位、财务水平、人脉资源、健康状况生育能力…等等和感情深浅综合在一起比较。这样也无可厚非，只是每有女朋友来和我聊如何让对方更爱自己的话题，我一般给的建议都是：把你自己经营好，健身、进修、努力工作，对方自然就会更重视你。</p><p>蔡澜说过一句话，感情里所有问题的核心原因，都是爱得不够。我深以为然。所有不能为你离婚的男人，或者不愿意为你放弃情人的丈夫，首先是不够爱你。他可能在一开始拿对你动心欣赏说事，等到感觉到压力又说家庭责任重大，孩子难以割舍。这不是瞎掰吗？真的爱家庭，爱孩子，当初干嘛要越界呢？</p><p>说到底，他既不是真的有多爱原配，也不是真的认为情人才是真爱，他最爱的只有他自己。他只是根据自己当下的需求，做出对他最有利的说辞和选择。</p><p>二，没有做过定量调研，仅就我看到的案例来说，大多数出轨的男人并不会离婚，离婚也不太会再婚。事实上，如果他因你而离婚，婚姻的稳定性也很低。</p><p>我一个朋友和她的前夫是同一个专业的大学校园情侣。一起走过了十几年，女人选择了相对安定和便于照顾孩子的工作，男人则成为行业里拔尖的专家。六七年前男人出轨下属被我的朋友发现，拖拖拉拉三年后才离婚。因为牵扯到孩子的抚养、财产的分割，我的朋友经历了一个非常痛苦的过程。但她逐渐走出来，并重新找到了另一半开始新生活。而她的前夫和那个姑娘一直没有结婚，还不时有分手的传言传出。</p><p>我还认识两个姑娘，她们曾经是师太笔下的阿修罗，年轻时是跋扈的恋爱选手，一个嫁给了某设计师，另一个和外企高管结婚了—都是将男方从前一段婚姻中抢夺而来。但新的这两段婚姻都没有持续超过一年。</p><p>很多姑娘觉得这个男人离开了以前的家和妻子来到自己身边，就可以顺利地和自己开展新的生活了。但事实并非如此。这个男人可能确实已经不爱他的前妻，对上一段感情没有了牵挂，但他和前人在一起生活了数年甚至十数年积累起来的点点滴滴的生活习惯却也一同如影随形地跟着来了。</p><p>你愿意把余生都用来和类似“他睡觉喜欢在床左边还是右边”、”他早上不刷牙就吃早餐”之类的琐事作斗争吗？又或者他不仅是带来了一套自己的生活习惯，也给你，他的新伴侣带来了一套既定的细节要求：早餐的鸡蛋一定要七分熟，作为妻子不能穿露出锁骨以下一厘米的衣服，周末一定要去父母家晚餐….没错，只要是他的伴侣，就要遵循他的这套生活模板，</p><p>不管你和他是否愿意就这些琐事做出妥协，它们都将变成你们关系里的沙砾，细微尖利，无处不在。</p><p>如果他已经有一个孩子，即便他不是孩子的主要抚养人，你也不要奢望能过上平静的二人世界了。而且永远不要抱有希望这个男人会把你的重要性和优先权置于他自己的孩子之上。他对着孩子的时候满怀内疚，对着你的时候却觉得你的付出都是理所当然—他都为你离婚了，你还能要求什么?</p><p>也见过有人和婚外情人再婚后的婚姻一直平稳持续，但基本上有两个前提条件：婚外情人在现实层面的条件更好；之前的婚姻已经有了无法调和的矛盾。</p><p>三，要求一个男人为你离婚，在得到真正幸福的道路上，你们也会走得非常艰难。</p><p>我有一个女朋友，十年前曾有一段刻骨铭心的恋情，对方是已婚的业内大拿，才华横溢。她虽然很爱这个人，但从来不要求他离婚。问她为什么，她对我说：“我承担不起也不想承担破坏他婚姻的责任与压力。”她享受了一段充满刺激的偷情，之后快刀斩乱麻地离开了。</p><p>确实，很少有人能做到心安理得、泰然自若地去承担“家庭破坏者”的角色。周围人的舆论压力暂且放在一边，每一次你和他发生的龃龉争执，对方的一句“为了你我婚都离了。”就问你受不受得了？更不要说你可能还会常常在心里问自己“他会像背叛前妻一样背叛我吗？”</p><p>四，不要把“不甘心”当做是刻骨铭心或者天意难违。</p><p>爱到底是什么？这是个亘古难解的终极问题。许多时候，我们把一些行为、现象当作是爱的标志：日思夜想、渴望奉献、蚀骨的嫉妒、对微小信号的狂喜…陷入不伦恋情的人就好像困在灾难现场等待救援的幸存者，孤绝隔离的环境和巨大的压力会让你对真正的感情状态感知失灵。</p><p>婚外情是一个非常消耗人意志力和体力的活动，两个人无休止的争吵分手和复合会把感情、耐心和精力吞噬干净。如果是一场普通的恋爱，可能你早就不耐烦持续下去。</p><p>但现在你无法放手，只是因为“不甘心“：不甘心”输“给比你老丑的女人，不甘心为他远离家乡和亲人却一无所获，不甘心奉献了最好的几年光阴却没有结果，不甘心他从来没有好好地陪过自己一个假期….这些不甘心藏在心底无法启齿，却被你自我催眠成了”难分难舍、命中注定的爱情“。</p><p>五，不要低估自己的成长速度，最开始的光环多半都会消失。</p><p>我那个曾经嫁给设计师的女朋友，在刚开始的两三年里对彼此在时尚方面默契的品味欣喜不已，在离婚前她却已经完全厌倦了两个人买买买的消遣，后来再嫁的男生是一个对奢侈品和时尚完全无感的IT男；一个曾和文艺男中年恋爱的朋友，对我说“黑泽明和拉赫玛尼诺夫也不能当饭吃啊！”；而那个嫁给外企高管的女朋友，她用了他一半的时间升到了和他一样的职位之后，就再也不想提这个人了。</p><p>对方的某些光环可能在一开始带给你巨大的眩晕和满足感，但最终的相处还是会回到伴侣关系的本质：忠诚、信任、生活上的彼此体贴与扶持。特别是对于在特别年轻的时候开始恋情的姑娘，随着年岁和阅历的增长，你会发现当时惊天动地的惊叹号，其实只是一个波澜不兴的句号。</p><p>六，不要被对方的付出绑架！</p><p>在这些故事里，有一个例子比较特别。我这个朋友其实并不爱她的前夫，但是架不住对方狂轰滥炸的攻势。一个结婚十年，孩子都六岁的成熟男人突然不顾一切地追求，她当时就懵了。出于巨大的虚荣，同时也觉得“他都为我净身出户了，我不答应他就太说不过去了”，她和这个男人结了婚。结果这段婚姻只持续了九个月，之后她才知道这个男人在追求她的同时还向另外两个女孩示好。</p><p>“就像公狗发情时还会骑桌子腿一样，三个人里最愚蠢的我就是他中年危机的牺牲品。”她对自己上一段婚姻如此总结。</p><p>七，不要用他对待你的方式去定义你自己。</p><p>正如对方狂热的追求并不代表你魅力拔群，可能你只是他面前唯一的那条桌子腿一样；对于那些被已婚情人用或决绝或无赖的方式宣告恋情结束，伤心欲绝的姑娘们，我想说的是你不要把这一切的责任都揽在自己身上，认为是自己给了对方太多压力，或者在某件事上做得更小心一些。对方就会继续留下来。</p><p>男人在选择生活伴侣时是非常实际的，具体参考本文的观点二。如果他只是一个需要拖拉机的农夫，你作为一辆法拉利对他来说也没什么太大意义。</p><p>八，不要为他进行任何身体上和心理上的自我伤害，也不要和他发生过多的金钱上的纠葛。不要为他花超过日常开销水平的费用，也不要接受他过于昂贵的礼物。</p><p>九，当然，并不是所有的婚外情都得不到善终，也不是所有背叛了的婚姻都必须苦苦强撑。丈夫出轨的妻子到底要不要离婚？深陷苦恋的情人要不要坚持？我不认为这里有一个以不变应万变的答案。</p><p>和二总不太一样，我作为一个女人，并不认为婚姻、家庭落到具体个人头上的时候，还要考虑去承担社会稳定的责任。我更多的还是关注关系里每个人的表现：是否足够坦诚、勇敢，有担当，并且保持了善的底线。</p><p>如果出轨的丈夫确实真心回归家庭，妻子或许值得尝试重拾信任；如果他敢作敢当地要追求真爱，对于自己该付出的代价，该承担的责任不逃避不推诿，尽力把自己造成的负面影响降到最低，我觉得作为妻子你也没有白爱这个男人一场；如果你的已婚情人珍视你们之间的爱情，坚定不移要和你在一起，并且有足够的诚意和智慧去解决三个人之间错综复杂的问题，那么也许他确实值得追随。</p><p>二总上一篇文章里有两个评论，一个说“人一辈子如果能遇见万分之一的真爱，值得下地狱。”另一个说“家庭重要到要靠演戏，要靠摧毁两个人的人生去维护，还是算了。”理论上说，我都同意，但涉及到两个人以上的感情关系，实在是太复杂了，如何能判断那就是你此生只取一觚的真爱，又或是真的可以对一段曾经相濡以沫的婚姻宣判死刑，除了眼光、智慧，可能你更需要的是：运气。 </p><p>十，最后要说的是，在我过去二十年漫长的观察中，那些不属于阳光下的目眩神迷的狂欢也好，撕心裂肺的伤痛也好，都会过去的。他在你之后也许可以回头平静地继续死水微澜的婚姻，也许会再次冒险，但都与你无关了。</p><p>你可以去谈新的恋爱，和闺蜜出去旅行，甚至只是去买衣服鞋子都好—衣服对女人来说真是沉默贴心的最佳伙伴，见证你的青春，衬托你的美，支撑你的衰败，抚慰你的哀伤。许舜英给中兴百货写道：爱美的小孩不会变坏。一个失恋女人只要还有力气试穿一双高跟鞋，就没有真的心碎。</p><p>不管你爱过的那个人是伟大或者不堪，那些你曾付出过青春和爱的岁月，封存了你哭哭笑笑的回忆，将只属于你一个人。它们也许会在你后面人生的某些时刻，悄然在心头浮现。就像海盗驶过曾经沉船的海域，怀揣只有自己知道的坐标，默默怀想平静而深远的水面之下，长眠着的，永远无法企及，也永远无人分享的宝藏。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;婚外情十诫&lt;br&gt;原文链接🔗:&lt;a href=&quot;https://mp.weixin.qq.com/s/VkZk_bSsGjXpiNQ67Rvh-A&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://mp.weixin.qq.com/s/VkZk_bSsGjXpiNQ67Rvh-A&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;iframe frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; width=&quot;330&quot; height=&quot;86&quot; src=&quot;//music.163.com/outchain/player?type=2&amp;id=435278010&amp;auto=1&amp;height=66&quot;&gt;&lt;/iframe&gt;&lt;br&gt;•┈┈┈┈┈┈୨୧┈┈┈┈┈┈•&lt;br&gt;
    
    </summary>
    
    
      <category term="read" scheme="http://yoursite.com/tags/read/"/>
    
  </entry>
  
  <entry>
    <title>world.execute (me) ;</title>
    <link href="http://yoursite.com/2019/05/28/world.execute%20(me)%20;/"/>
    <id>http://yoursite.com/2019/05/28/world.execute (me) ;/</id>
    <published>2019-05-28T03:11:11.000Z</published>
    <updated>2019-05-28T02:23:59.000Z</updated>
    
    <content type="html"><![CDATA[<p>•┈┈┈┈┈┈୨୧┈┈┈┈┈┈•<br><a id="more"></a><br>专辑：<br>Miracle Milk<br>歌手：<br>Mili<br>•┈┈┈┈┈┈┈┈┈┈┈┈•</p><p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=435278010&auto=1&height=66"></iframe><br>🎵    Switch on the power line<br>🎵    接上电源<br>🎵    Remember to put on<br>🎵    记得装备好<br>🎵    PROTECTION<br>🎵    绝缘护具<br>🎵    Lay down your pieces<br>🎵    摆好棋子<br>🎵    And let’s begin<br>🎵    开始吧<br>🎵    OBJECT CREATION<br>🎵    对象生成<br>🎵    Fill in my data parameters<br>🎵    输入我的参数<br>🎵    INITIALIZATION<br>🎵    数据初始化<br>🎵    Set up our new world<br>🎵    设定好我们的新世界<br>🎵    And let’s begin the<br>🎵    开始吧<br>🎵    SIMULATION<br>🎵    模拟程序<br>🎵    world.execute(me);<br>🎵    （间奏）<br>🎵    If I’m a set of points<br>🎵    如果我是一组点<br>🎵    Then I will give you my<br>🎵    那么我将献给你<br>🎵    DIMENSION<br>🎵    我的次元<br>🎵    If I’m a circle<br>🎵    如果我是一个圆<br>🎵    Then I will give you my<br>🎵    那么我将献给你<br>🎵    CIRCUMFERENCE<br>🎵    我的圆周<br>🎵    If I’m a sine wave<br>🎵    如果我是一条正弦波<br>🎵    Then you can sit on all my<br>🎵    那么请你坐上<br>🎵    TANGENTS<br>🎵    我的切线<br>🎵    If I approach infinity<br>🎵    如果我趋近于无穷<br>🎵    Then you can be my<br>🎵    那么你便可以成为<br>🎵    LIMITATIONS<br>🎵    我的极限<br>🎵    Switch my current<br>🎵    切换我的电流<br>🎵    To AC to DC<br>🎵    从交流到直流<br>🎵    And then blind my vision<br>🎵    然后蒙上我的眼睛<br>🎵    So dizzy so dizzy<br>🎵    头晕目眩<br>🎵    Oh we can travel<br>🎵    我们可以穿越时空<br>🎵    To A.D to B.C<br>🎵    从西历到纪元前<br>🎵    And we can unite<br>🎵    然后成为一体<br>🎵    So deeply so deeply<br>🎵    深深入髓<br>🎵    If I can<br>🎵    如果我能<br>🎵    If I can give you all the<br>🎵    如果我能够献给你<br>🎵    STIMULATIONS<br>🎵    所有的刺激<br>🎵    Then I can<br>🎵    那么我就能够<br>🎵    Then I can be your only<br>🎵    那么我就能够成为你<br>🎵    SATISFACTION<br>🎵    唯一的满足<br>🎵    If I can make you happy<br>🎵    如果我能够让你开心<br>🎵    I will run the<br>🎵    那么我将<br>🎵    EXECUTION<br>🎵    执行指令<br>🎵    Though we are trapped<br>🎵    但我们被困<br>🎵    In this strange strange<br>🎵    在这个异乎寻常的<br>🎵    SIMULATION<br>🎵    模拟程序之中<br>🎵    If I’m an eggplant<br>🎵    如果我是一根茄子<br>🎵    Then I will give you my<br>🎵    那么我将献给你<br>🎵    NUTRIENTS<br>🎵    我的营养<br>🎵    If I’m a tomato<br>🎵    如果我是一颗番茄<br>🎵    Then I will give you<br>🎵    那么我将献给你<br>🎵    ANTIOXIDANTS<br>🎵    我的抗氧化物<br>🎵    If I’m a tabby cat<br>🎵    如果我是一只花猫<br>🎵    Then I will purr for your<br>🎵    那么我将为你咕噜咕噜<br>🎵    ENJOYMENT<br>🎵    只要你喜欢<br>🎵    If I’m the only god<br>🎵    如果我是唯一的神<br>🎵    Then you’re the proof of my<br>🎵    那么你将是我<br>🎵    EXISTENCE<br>🎵    存在的证明<br>🎵    Switch my gender<br>🎵    切换我的性别<br>🎵    To F to M<br>🎵    从女到男<br>🎵    And then do whatever<br>🎵    只做想做的事<br>🎵    From AM to PM<br>🎵    从早到晚<br>🎵    Oh switch my role<br>🎵    切换我的角色<br>🎵    To S to M<br>🎵    从施虐者到被虐者<br>🎵    So we can enter<br>🎵    这样我们就可以<br>🎵    The trance the trance<br>🎵    恍惚出神<br>🎵    If I can<br>🎵    如果我能<br>🎵    If I can feel your<br>🎵    如果我能够感受到<br>🎵    VIBRATIONS<br>🎵    你的振动<br>🎵    Then I can<br>🎵    那么我就能够<br>🎵    Then I can finally be<br>🎵    那么我就终于能够<br>🎵    COMPLETION<br>🎵    变为完全<br>🎵    Though you have left<br>🎵    但你还是走了<br>🎵    You have left<br>🎵    你走了<br>🎵    You have left<br>🎵    你走了<br>🎵    You have left<br>🎵    你走了<br>🎵    You have left<br>🎵    你走了<br>🎵    You have left me in<br>🎵    你离我而去<br>🎵    ISOLATION<br>🎵    在孤独之中<br>🎵    If I can<br>🎵    如果我能<br>🎵    If I can erase all the pointless<br>🎵    如果我能够消去<br>🎵    FRAGMENTS<br>🎵    这些无意义的碎片<br>🎵    Then maybe<br>🎵    那么我就可能<br>🎵    Then maybe you won’t leave me so<br>🎵    那么我就可能不会<br>🎵    DISHEARTENED<br>🎵    如此失望<br>🎵    Challenging your god<br>🎵    与神做对<br>🎵    You have made some<br>🎵    你传给我的是<br>🎵    ILLEGAL ARGUMENTS<br>🎵    非法参数<br>🎵    EXECUTION<br>🎵    执行<br>🎵    EXECUTION<br>🎵    执行<br>🎵    EXECUTION<br>🎵    执行<br>🎵    EXECUTION<br>🎵    执行<br>🎵    EXECUTION<br>🎵    执行<br>🎵    EXECUTION<br>🎵    执行<br>🎵    EXECUTION<br>🎵    执行<br>🎵    EXECUTION<br>🎵    死刑<br>🎵    EXECUTION<br>🎵    死刑<br>🎵    EXECUTION<br>🎵    死刑<br>🎵    EXECUTION<br>🎵    死刑<br>🎵    EXECUTION<br>🎵    死刑<br>🎵    EIN<br>🎵    一<br>🎵    DOS<br>🎵    二<br>🎵    TROIS<br>🎵    三<br>🎵    NE<br>🎵    四<br>🎵    FEM<br>🎵    五<br>🎵    LIU<br>🎵    六<br>🎵    EXECUTION<br>🎵    死刑<br>🎵    If I can<br>🎵    如果我能<br>🎵    If I can give them all the<br>🎵    如果我能够给所有人<br>🎵    EXECUTION<br>🎵    赐予死刑<br>🎵    Then I can<br>🎵    那么我就能够<br>🎵    Then I can be your only<br>🎵    那么我就能够成为<br>🎵    EXECUTION<br>🎵    你唯一的执行<br>🎵    If I can have you back<br>🎵    如果你能够回到我身边<br>🎵    I will run the<br>🎵    那么我将<br>🎵    EXECUTION<br>🎵    执行指令<br>🎵    Though we are trapped<br>🎵    但我们始终被困<br>🎵    We are trapped ah<br>🎵    始终被困<br>🎵    I’ve studied<br>🎵    我学会了<br>🎵    I’ve studied how to properly<br>🎵    我学会了<br>🎵    LO-O-OVE<br>🎵    如何正确去爱<br>🎵    Question me<br>🎵    提问我吧<br>🎵    Question me I can answer all<br>🎵    我全都能答对<br>🎵    LO-O-OVE<br>🎵    只要是爱的问题<br>🎵    I know the algebraic expression of<br>🎵    就连爱的代数表达式<br>🎵    LO-O-OVE<br>🎵    我都知道<br>🎵    Though you are free<br>🎵    虽然你已自由<br>🎵    I am trapped<br>🎵    我仍被困<br>🎵    Trapped in<br>🎵    我仍被困<br>🎵    LO-O-OVE<br>🎵    在爱之中<br>🎵    EXECUTION<br>🎵    死刑</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;•┈┈┈┈┈┈୨୧┈┈┈┈┈┈•&lt;br&gt;
    
    </summary>
    
    
      <category term="py" scheme="http://yoursite.com/tags/py/"/>
    
  </entry>
  
  <entry>
    <title>通过爬网易云音乐《赤い莲》在评论区发现一个故事</title>
    <link href="http://yoursite.com/2019/05/14/%E3%80%8A%E8%B5%A4%E3%81%84%E8%8E%B2%E3%80%8B/"/>
    <id>http://yoursite.com/2019/05/14/《赤い莲》/</id>
    <published>2019-05-14T07:43:06.000Z</published>
    <updated>2019-05-14T08:13:33.000Z</updated>
    
    <content type="html"><![CDATA[<p>•┈┈┈┈┈┈୨୧┈┈┈┈┈┈•<br><a id="more"></a><br>昵称:<br>我曾陪你颠沛流离<br>签名:<br>Never let you go<br>评论:<br>•┈┈┈┈┈┈┈┈┈┈┈┈•<br>🌸     我怎么还没离开<br>🌸     谢谢你爱我<br>🌸     他看他的[最常访问]的时候，被我看到了那个女生名列前三，这样说你还不明白的话，我也没办法了。<br>🌸     是我无意中在他刷微博的时候看到他手机，他微博的访客记录列表。<br>🌸     如有一个字是虚构我也可以少一份难眠。<br>🌸     我问你裸照的事了。你说不是胡的，是你同事发给你的。很苍白，很无力的解释。我提了三次分手你都打断了。我想，你可能在挽留。便拥抱了你。<br>🌸     爱你的第六年。<br>🌸     你为什么要这样对我？<br>🌸     你饭局回来，很是疲惫，我让你刷完牙就睡觉，你说我太烦人，接连数落，说我带给你20%是快乐，其余都是忍受，我哭了，连哭声你都避之不及，你跳起来离开了床铺，去了另一个房间。<br>🌸     我再说一遍，我爱你<br>🌸     我爱你，我爱你，我爱你，事无巨细的爱你，我看不见远方，闻不到异样气味，我又瞎又聋，只看得见你，曾不减，夜郎僝僽，薄命长辞知已别，问人生到此凄凉否？千万恨，为君剖。兄生辛未吾丁丑，共此时，冰霜摧折，早衰蒲柳。诗赋从今须少作，留取心魄相守。但愿得，河清人寿！归日急翻行戍稿，把空名料…<br>🌸     可怕的是，我还爱你，我一边对所有人说我不在乎你，一边爱你爱得要死，我一边准备着搬家的纸箱，一边囤着一年也用不完的卷纸，买着成双成对的玩偶，一次次打扫家里的所有角落，我和你身上的味道一样，我们像，又不像。<br>🌸     之前查过很多病人自述，有的人很直白的说，心理医生没耐心慢慢听你说这么久的心结，他只会该开药开药，让你多睡少想，对身体各种不好，我尝试和我妈说，她很暴怒。<br>🌸     从她爬到你的微博访客记录前三，我就隐约觉得有问题，我承认我是个很狐疑的人，但是事实总是一次次印证我的猜测，所以我觉得，可怕的不是我的猜测，而是你的赌博，你小赌，是赌我不会发现，大赌，是赌我不舍离开。<br>🌸     7.29，我喃喃着翻到那天和你的聊天记录。那天是周六，我上班，你在家休息，后来你跟我开玩笑说趁我不在在家里撸了一发。而我从小就知道，所有的玩笑都有认真的成分，多少真心话在玩笑中说出口，只是我是那个不想懂的人。<br>🌸     前几天，你买了新手机，旧的手机给了我，在最近删除的照片里，7.28凌晨3.04到3.11之间，有三张我们高中同学、我高中同桌胡佩云的由浅入深的裸照，那时我应该正在你枕边安睡。7.29周六上午9.13到9.54之间，又多了两张她升级到露出乳晕的照片。<br>🌸     7.22是我的生日，你到晚上，临时给我买了个很难吃的蛋糕，我假装很好吃的样子塞了满嘴。你给我拍了一张并不好看的照片，我说可以重拍吗，你拒绝了，说我嫌弃你的摄影技术，然后你坚持把那张照片发了朋友圈。<br>🌸     真可悲啊，我还爱你。<br>🌸     从你三月发的第一条有我的朋友圈开始，我就看到，戴雪莹，蔡怡，等等，她们一直是看不到的<br>🌸     我说为什么你朋友圈没有我，为什么我看到全民k歌上总有一个人在跟你调情，为什么你总要在社交软件上说孤独。你发了有我的动态，把自己塑造成一个爱我顾家的大方男友形象，可是为什么，一直是分组不可见，为什么那个蔡怡在的分组七个人全是女生，为什么有的清空了聊天记录却朋友圈一晚上几十条互动。<br>🌸     昨天晚上，你又喝多了，十一点多，醉醺醺的回来，要我，而我不在安全期。结束之后你倒头就睡了，我给你盖好被子，去很远的24小时药房买敏婷。如果说，16到24岁的这些年里，我做的一切都是为了努力靠近你，那从24岁开始，我所做的所有事情，应该是为了永远离开你。<br>🌸     昨晚再看，你已经清空了和她聊天记录。<br>🌸     上周三我们结束了异地恋，那天晚上你叫了跟你十年兄弟的前女友吃夜宵，她当我面对你说着［你来管我啊~］之类的话，我充耳不闻只当她轻佻。回到家里已经两点，你要我，可要我的时候却一直和她聊天，我忍了半个小时，断断续续，后来我起身走了，你们又聊了很久，我说给我看看，你说没什么，便倒扣了手机<br>🌸     6.15的晚上，你公司聚餐喝多了，在回家的路上给三个女生发了轻佻的语音，其中也包括我，我说好想陪在你身边的同时，你对蔡怡发语音说［大一我就对你一见钟情，想对你好，想跟你有所发展，想了解彼此，想你给我个机会］。她说你后来不是都恋爱了，你说，那个女生怎么伤害了你，而你却傻傻的痴情相信<br>🌸     6.11的夜里，你说，该考虑结婚了。我想到你分了组的朋友圈才有我，我想到你见我父母时模棱两可的话，我想到第一次去见你家长时，你妈妈把你拉进房间，问你要不要给我包红包，你说不用说了八次。我说有了经济基础，以后感情稳定了再谈婚姻。你说那样你不一定会等我。你家里也不一定会等我。<br>🌸     蔡怡又是谁<br>🌸     你还穿着她给你买的那件衬衫呢<br>🌸     我想说，最可悲的是，我还爱你。<br>🌸     我对你的信任早就是一张破破烂烂的纸，和着滴滴答答的眼泪成了地上的烂泥，信用度透支的人的解释没有说服力，如果你想自证清白就手机不删掉任何东西直接递给我随便看，我们的信任早就分崩离析，这不是我自己能派遣消化弥补的，这是你的责任你的事。<br>🌸     你说你觉得我陪着你你很快乐很安心很踏实，你甚至害怕爱上我以后你会不顾一切掏心掏肺，可我爱你这已经是第七年，因为你，我斩断所有和别人的可能，我赌博我认命，我愿赌服输，我以为爱情是择一城终老遇一人白首，可是我想起来我看十三岁NANA的我了，那时候我说，爱情就是背叛或者被背叛。<br>🌸     你还是去见了李婉茹，坐车千里迢迢，你去跟她深情表白，字里行间里全是爱意，被婉拒之后选择在我这里降落，我还以为是你对我动心，其实你只是被孤独追杀的走投无路。和我在一起以后你还记着她的生日，阴历阳历发两个红包，连儿童节也是发红包的理由，她高中皱眉头的样子，你心疼的样子，我忘了吗。<br>🌸     你说你跟你“妹妹”盛曈曈没什么，只是她失恋了找你派遣难受所以你们约了一发，可是我是你女朋友，可是你们的聊天记录里记录着远远超过你所说的［简单的约了一发］，你们朋友兄弟还做着掩护，你们没带套，你们在我们睡的床上做，你们甚至聊骚的时候自然的聊起我，仿佛聊起了你们养的狗。<br>🌸     你说你跟你的前同事顾燕飞没什么，只是一起旅行，一起远赴青岛看薛之谦演唱会，你们睡两张床，你们只牵过手甚至都没有接过吻，买过情侣钥匙扣，看过电影，去过游乐园，无名指戴过戒指，微博封面是你戴着戒指的手。<br>🌸     昨天你跟一个叫戴雪莹的女生玩手游版吃鸡玩了整个晚上，我没听你说起过她，我只听见你说这个游戏好无聊，然后你玩到了三点。每一局你们都在一起，其他队友全是随机匹配，你们最后以双排收尾，你却两点半还没有睡。异地恋。<br>🌸     这首歌我单曲循环了整个青春 Hey娜娜 Hey奈奈  </p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=429510&auto=1&height=66"></iframe>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;•┈┈┈┈┈┈୨୧┈┈┈┈┈┈•&lt;br&gt;
    
    </summary>
    
    
      <category term="py" scheme="http://yoursite.com/tags/py/"/>
    
  </entry>
  
  <entry>
    <title>监测主从同步是否运行并发邮件</title>
    <link href="http://yoursite.com/2019/04/28/%E7%9B%91%E6%B5%8B%E4%B8%BB%E4%BB%8E%E5%90%8C%E6%AD%A5%E5%B9%B6%E5%8F%91%E9%82%AE%E4%BB%B6/"/>
    <id>http://yoursite.com/2019/04/28/监测主从同步并发邮件/</id>
    <published>2019-04-28T09:34:23.000Z</published>
    <updated>2019-04-29T06:45:58.000Z</updated>
    
    <content type="html"><![CDATA[<p>•┈┈┈┈┈┈୨୧┈┈┈┈┈┈•<br><a id="more"></a><br>        #!/bin/bash</p><p>test=$(ps aux |grep “mysql”|grep -v grep)</p><p>time=$(date “+%Y-%m-%d_%H:%M:%S”)</p><p>array=($(mysql -h 主机地址 -u用户 -p密码  -e “show slave status\G”|grep “Running” |awk ‘{print $2}’))</p><p>if [ -n “$array” ]</p><p>then</p><p>echo $time “mysql is running” &gt;&gt;/root/backup/sh/mysqlrunning.log </p><p>echo $time “mysql is running” &gt;&gt;/root/backup/sh/mysqlrunning.txt</p><p>else</p><p>echo $time “mysql stop” &gt;&gt;/root/backup/sh/mysqlrunning.log </p><p>echo $time “mysql stop” &gt;&gt;/root/backup/sh/mysqlrunning.txt</p><p>fi</p><p> if [ “${array[0]}” == “Yes” ] || [ “${array[1]}” == “Yes” ]</p><p>​          then</p><p>​            echo $time “slave is OK” &gt;&gt;/root/backup/sh/mysqlrunning.log</p><p>​             echo $time “slave is OK” &gt;&gt;/root/backup/sh/mysqlrunning.txt</p><p>​       else</p><p>​             echo $time “slave is wrong” &gt;&gt;/root/backup/sh/mysqlrunning.log</p><p>​             echo $time “slave is wrong” &gt;&gt;/root/backup/sh/mysqlrunning.txt </p><p>​            </p><p>​    fi</p><p>mail -s “[2/2]132.148.242.150 [mysqlmaster&amp;salve] $time” 邮箱地址 &lt;/root/backup/sh/mysqlrunning.txt</p><p>rm -rf /root/backup/sh/mysqlrunning.txt</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;•┈┈┈┈┈┈୨୧┈┈┈┈┈┈•&lt;br&gt;
    
    </summary>
    
    
      <category term="shell" scheme="http://yoursite.com/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>yum安装mysql</title>
    <link href="http://yoursite.com/2019/04/25/mysql%E5%AE%89%E8%A3%85/"/>
    <id>http://yoursite.com/2019/04/25/mysql安装/</id>
    <published>2019-04-25T02:34:23.000Z</published>
    <updated>2019-04-30T02:46:53.000Z</updated>
    
    <content type="html"><![CDATA[<p>•┈┈┈┈┈┈୨୧┈┈┈┈┈┈•<br><a id="more"></a><br>Linux/UNIX 上安装 MySQL<br>Linux平台上推荐使用RPM包来安装Mysql,MySQL AB提供了以下RPM包的下载地址：<br>MySQL - MySQL服务器。你需要该选项，除非你只想连接运行在另一台机器上的MySQL服务器。<br>MySQL-client - MySQL 客户端程序，用于连接并操作Mysql服务器。<br>MySQL-devel - 库和包含文件，如果你想要编译其它MySQL客户端，例如Perl模块，则需要安装该RPM包。<br>MySQL-shared - 该软件包包含某些语言和应用程序需要动态装载的共享库(libmysqlclient.so*)，使用MySQL。<br>MySQL-bench - MySQL数据库服务器的基准和性能测试工具。<br>安装前，我们可以检测系统是否自带安装 MySQL:<br>rpm -qa | grep mysql<br>如果你系统有安装，那可以选择进行卸载:<br>rpm -e mysql　　// 普通删除模式<br>rpm -e –nodeps mysql　　// 强力删除模式，如果使用上面命令删除时，提示有依赖的其它文件，则用该命令可以对其进行强力删除<br>安装 MySQL：<br>接下来我们在 Centos7 系统下使用 yum 命令安装 MySQL，需要注意的是 CentOS 7 版本中 MySQL数据库已从默认的程序列表中移除，所以在安装前我们需要先去官网下载 Yum 资源包，下载地址为：<a href="https://dev.mysql.com/downloads/repo/yum/" target="_blank" rel="noopener">https://dev.mysql.com/downloads/repo/yum/</a></p><p>wget <a href="http://repo.mysql.com/mysql-community-release-el7-5.noarch.rpm" target="_blank" rel="noopener">http://repo.mysql.com/mysql-community-release-el7-5.noarch.rpm</a><br>rpm -ivh mysql-community-release-el7-5.noarch.rpm<br>yum update<br>yum install mysql-server<br>权限设置：<br>chown mysql:mysql -R /var/lib/mysql<br>初始化 MySQL：<br>mysqld –initialize<br>启动 MySQL：<br>systemctl start mysqld<br>查看 MySQL 运行状态：<br>systemctl status mysqld<br>注意：如果我们是第一次启动 mysql 服务，mysql 服务器首先会进行初始化的配置。<br>此外,你也可以使用 MariaDB 代替，MariaDB 数据库管理系统是 MySQL 的一个分支，主要由开源社区在维护，采用 GPL 授权许可。开发这个分支的原因之一是：甲骨文公司收购了 MySQL 后，有将 MySQL 闭源的潜在风险，因此社区采用分支的方式来避开这个风险。<br>MariaDB的目的是完全兼容MySQL，包括API和命令行，使之能轻松成为MySQL的代替品。<br>yum install mariadb-server mariadb<br>mariadb数据库的相关命令是：<br>systemctl start mariadb  #启动MariaDB<br>systemctl stop mariadb  #停止MariaDB<br>systemctl restart mariadb  #重启MariaDB<br>systemctl enable mariadb  #设置开机启动<br>验证 MySQL 安装<br>在成功安装 MySQL 后，一些基础表会表初始化，在服务器启动后，你可以通过简单的测试来验证 MySQL 是否工作正常。<br>使用 mysqladmin 工具来获取服务器状态：<br>使用 mysqladmin 命令俩检查服务器的版本, 在 linux 上该二进制文件位于 /usr/bin 目录，在 Windows 上该二进制文件位于C:\mysql\bin 。<br>[root@host]# mysqladmin –version<br>linux上该命令将输出以下结果，该结果基于你的系统信息：<br>mysqladmin  Ver 8.23 Distrib 5.0.9-0, for redhat-linux-gnu on i386<br>如果以上命令执行后未输出任何信息，说明你的Mysql未安装成功。<br>使用 MySQL Client(Mysql客户端) 执行简单的SQL命令<br>你可以在 MySQL Client(Mysql客户端) 使用 mysql 命令连接到 MySQL 服务器上，默认情况下 MySQL 服务器的登录密码为空，所以本实例不需要输入密码。<br>命令如下：<br>[root@host]# mysql<br>以上命令执行后会输出 mysql&gt;提示符，这说明你已经成功连接到Mysql服务器上，你可以在 mysql&gt; 提示符执行SQL命令：<br>mysql&gt; SHOW DATABASES;<br>+———-+<br>| Database |<br>+———-+<br>| mysql    |<br>| test     |<br>+———-+<br>2 rows in set (0.13 sec)<br>Mysql安装后需要做的<br>Mysql安装成功后，默认的root用户密码为空，你可以使用以下命令来创建root用户的密码：<br>[root@host]# mysqladmin -u root password “new_password”;<br>现在你可以通过以下命令来连接到Mysql服务器：<br>[root@host]# mysql -u root -p<br>Enter password:<strong>***</strong><br>注意：在输入密码时，密码是不会显示了，你正确输入即可。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;•┈┈┈┈┈┈୨୧┈┈┈┈┈┈•&lt;br&gt;
    
    </summary>
    
    
      <category term="shell" scheme="http://yoursite.com/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>mysql数据库定期备份以及删除</title>
    <link href="http://yoursite.com/2019/04/24/mysql%E5%A4%87%E4%BB%BD%E4%BB%A5%E5%8F%8A%E5%88%A0%E9%99%A4%E8%BF%87%E6%9C%9F%E5%A4%87%E4%BB%BDshell/"/>
    <id>http://yoursite.com/2019/04/24/mysql备份以及删除过期备份shell/</id>
    <published>2019-04-24T10:34:23.000Z</published>
    <updated>2019-04-29T06:45:44.000Z</updated>
    
    <content type="html"><![CDATA[<p>•┈┈┈┈┈┈୨୧┈┈┈┈┈┈•<br><a id="more"></a><br>#!/bin/bash</p><p>mysql_user=”备份账号”</p><p>mysql_password=”数据库密码”</p><p>backup_db_arr=(“数据库名称”) #要备份的数据库名称，多个用空格分开隔开 如(“db1” “db2” “db3”)</p><p>backup_location=/root/backup/backup #备份数据存放位置，末尾请不要带”/“,此项可以保持默认，程序会自动创建文件夹</p><p>expire_backup_delete=”ON” #是否开启过期备份删除 ON为开启 OFF为关闭</p><p>expire_days=7 #过期时间天数 默认为三天，此项只有在expire_backup_delete开启时有效</p><p>welcome_msg=”hello”</p><p>DATE=$(date +%Y-%m-%d_》》%X)</p><p>time=<code>date +%Y-%m-%d_%H:%M:%S</code></p><p>#“+%Y-%m-%d %H:%M:%S”</p><p>backup_time=<code>date +%Y-%m-%d_%H:%M:%S</code> #定义备份详细时间</p><p>backup_Ymd=<code>date +%Y-%m-%d</code> #定义备份目录中的年月日时间</p><p>backup_7ago=<code>date -d</code>7 days ago<code>+%Y%m%d</code>  #7天之前的日期</p><p>backup_dir=$backup_location/$backup_Ymd #备份文件夹全路径</p><p>welcome_msg=”Welcome to use MySQL backup tools!” #欢迎语</p> <!--more--><p># 判断MYSQL是否启动,mysql没有启动则备份退出</p><p>mysql_ps=<code>ps -ef |grep mysql |wc -l</code></p><p>mysql_listen=<code>netstat -an |grep LISTEN |grep $mysql_port|wc -l</code></p><p>if [ [$mysql_ps == 0] -o [$mysql_listen == 0] ];</p><p>then</p><p>echo “ $DATE ERROR:MySQL is not running! backup stop!” &gt;&gt;/root/backup/backup.log</p><p>echo “$time mysql is not running” &gt;&gt;/root/backup/mail.txt</p><p>else</p><p>echo  “$DATE $welcome_msg” &gt;&gt;/root/backup/backup.log</p><p>echo “[$time]”</p><p>fi</p><p> # 判断有没有定义备份的数据库，如果定义则开始备份，否则退出备份</p><p>if [ “$backup_db_arr” != “” ];then</p><p>#dbnames=$(cut -d ‘,’ -f1-5 $backup_database)</p><p>#echo  $DATE “arr is (${backup_db_arr[@]})”</p><p>for dbname in ${backup_db_arr[@]}</p><p>do</p><p>echo  $time “database $dbname backup start…” &gt;&gt;/root/backup/backup.log#写入日志</p><p>echo $time “database $dbname backup start “&gt;&gt;/root/backup/mail.txt#写入邮件日志</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p $backup_dir</span><br><span class="line">mysqldump  -u$mysql_user -p$mysql_password mall | gzip &gt; $backup_dir/$dbname-$time.sql.gz</span><br></pre></td></tr></table></figure><p>flag=<code>echo $?</code></p><p>if [ $flag == “0” ];then</p><p>echo $DATE “database $dbname success backup to $backup_dir/$dbname-$backup_time.sql.gz” &gt;&gt;/root/backup/backup.log</p><p>echo $time “databases success backup “&gt;&gt;/root/backup/mail.txt#写入邮件日志</p><p>else</p><p>echo $DATE “database $dbname backup fail!” &gt;&gt;/root/backup/backup.log</p><p>echo $time “database backup fail”&gt;&gt;/root/backup/mail.txt#写入邮件日志</p><p>fi</p><p>done</p><p>else</p><p>echo $DATE “ERROR:No database to backup! backup stop” &gt;&gt;/root/backup/backup.log</p><p>echo $time “no database to backup”&gt;&gt;/root/backup/mail.txt</p><p>exit</p><p>fi</p><p># 如果开启了删除过期备份，则进行删除操作</p><p>if [ “$expire_backup_delete” == “ON” -a “$backup_location” != “” ];then</p><p>#<code>find $backup_location/ -type d -o -type f -ctime $expire_days -exec rm -rf {} \;</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find $backup_location/ -type d -mtime $expire_days | xargs rm -rf</span><br></pre></td></tr></table></figure><p>echo “$DATE Expired backup data delete complete!”&gt;&gt;/root/backup/backup.log</p><p>echo $time “expired backup data delete complete”&gt;&gt;/root/backup/mail.txt</p><p>fi</p><p>echo “$DATE  All database backup success! Thank you!❤️” &gt;&gt;/root/backup/backup.log</p><p>mail -s “[1/2]132.148.242.150 mysqlbackup $time” 邮箱名&lt;/root/backup/mail.txt</p><p>rm -rf /root/backup/mail.txt#删除邮件日志</p><p>exit</p><p>fi</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;•┈┈┈┈┈┈୨୧┈┈┈┈┈┈•&lt;br&gt;
    
    </summary>
    
    
      <category term="shell" scheme="http://yoursite.com/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>脚本安装mysql</title>
    <link href="http://yoursite.com/2019/04/24/mysql%E8%84%9A%E6%9C%AC%E5%AE%89%E8%A3%85/"/>
    <id>http://yoursite.com/2019/04/24/mysql脚本安装/</id>
    <published>2019-04-24T09:34:23.000Z</published>
    <updated>2019-04-29T06:46:44.000Z</updated>
    
    <content type="html"><![CDATA[<p>•┈┈┈┈┈┈୨୧┈┈┈┈┈┈•<br><a id="more"></a></p><pre><code>#!/bin/bash</code></pre><p>echo “正在查找相关mysql程序”<br>mysql1=$(rpm -qa |grep mysql)<br>if [ ! -n “$mysql1” ]; then<br>  echo “服务器没有安装相关mysql程序”<br>else<br>  echo “服务器安装了相关mysql程序，正在卸载。。。”<br>  echo $mysql1<br>  rpm -e –nodeps $mysql1<br>  echo “mysql相关程序卸载完成”<br>fi</p><p>echo “————————————————“</p><p>echo “正在查看相关mariadb程序”<br>mariadb1=$(rpm -qa |grep mariadb)<br>if [ ! -n “$mariadb1” ]; then<br>  echo “服务器没有安装相关mariadb程序”<br>else<br>  echo “服务器安装了相关mariadb程序，正在卸载。。。”<br>  echo $mariadb1<br>  rpm -e –nodeps $mariadb1<br>  echo “mariadb相关程序卸载完成”<br>fi</p><p>echo “————————————————“</p><p>echo “正在检验是否存在mysql相关用户和组”<br>mysqlG=$(nl /etc/group | grep mysql)<br>mysqlS=$(nl /etc/shadow | grep mysql)<br>mysqlU=$(nl /etc/passwd | grep mysql)<br>if [ ! -n “$mysqlU” ]; then<br>  echo “不存在mysql用户”<br>else<br>  echo “存在mysql用户，正在删除。。。”<br>  echo $mysqlU<br>  userdel mysql #这里写死了，待优化<br>  echo “mysql用户删除成功”<br>fi</p><p>echo “————————————————“</p><p>echo “正在查找mysql相关目录”<br>mulu=$(find / -name mysql)<br>if [ ! -n “$mulu” ]; then<br>  echo “无相关mysql目录”<br>else<br>  echo “服务器存在相关mysql目录，正在删除。。。”<br>  echo $mulu<br>  rm -rf $mulu<br>  echo “删除完成！”<br>fi</p><p>echo “————————————————“</p><p>echo “正在查找mysqld.log”<br>MYSQL_LOG=$(find / -name mysqld.log)<br>if [ ! -n “$MYSQL_LOG” ]; then<br>  echo “没找到mysqld.log”<br>else<br>  echo “找到mysqld.log，正在删除。。。”<br>  echo $MYSQL_LOG<br>  rm -rf $MYSQL_LOG<br>  echo “删除完成!”<br>fi</p><p>echo “————————————————“</p><p>read -p “请输入centos的安装范围(只能输入el6或el7):” fanwei<br>if [ “$fanwei” = “el6” ]; then<br>  rpm -ivh mysql-community-common-5.7.21-1.el6.x86_64.rpm mysql-community-libs-5.7.21-1.el6.x86_64.rpm mysql-community-client-5.7.21-1.el6.x86_64.rpm mysql-community-server-5.7.21-1.el6.x86_64.rpm<br>  echo “mysql安装成功”<br>elif [ “$fanwei” = “el7” ]; then<br>  rpm -ivh mysql-community-common-5.7.21-1.el7.x86_64.rpm mysql-community-libs-5.7.21-1.el7.x86_64.rpm mysql-community-client-5.7.21-1.el7.x86_64.rpm mysql-community-server-5.7.21-1.el7.x86_64.rpm<br>  echo “mysql安装成功”<br>  mysql –version</p><p>else<br>  echo “输入错误，再见！”<br>  exit 0<br>fi</p><p>echo “————————————————“</p><p>echo “正在改写/etc/my.cnf”</p><p>aa=”[mysqld]”<br>a=”symbolic-links=0”<br>b=”log-error=/var/log/mysqld.log”<br>c=”pid-file=/var/run/mysqld/mysqld.pid”<br>d=”character_set_server=utf8”<br>e=”skip-name-resolve”<br>f=”lower_case_table_names=1”<br>g=”sql_mode=STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION”<br>h=”[client]”<br>i=”default-character-set=utf8”<br>j=”[mysql]”</p><p>moren1=/var/lib/mysql<br>moren2=/var/lib/mysql/mysql.sock</p><p>read -p “是否需要更改数据存储目录？(y or n)：” yorn<br>if [ “$yorn” = “y” ]; then<br>  echo -e “\033[31m 提示：socket路径在datadir目录下，datadir默认路径/var/lib/mysql，socket默认路径/var/lib/mysql/mysql.sock \033[0m”<br>  read -p “输入datadir路径：” datadir<br>  read -p “输入socket路径：” socketdir<br>  echo $aa &gt; /etc/my.cnf<br>  echo datadir=$datadir &gt;&gt; /etc/my.cnf<br>  echo socket=$socketdir &gt;&gt; /etc/my.cnf<br>  echo $a &gt;&gt; /etc/my.cnf<br>  echo $b &gt;&gt; /etc/my.cnf<br>  echo $c &gt;&gt; /etc/my.cnf<br>  echo $d &gt;&gt; /etc/my.cnf<br>  echo $e &gt;&gt; /etc/my.cnf<br>  echo $f &gt;&gt; /etc/my.cnf<br>  echo $g &gt;&gt; /etc/my.cnf<br>  echo $h &gt;&gt; /etc/my.cnf<br>  echo $i &gt;&gt; /etc/my.cnf<br>  echo $j &gt;&gt; /etc/my.cnf<br>  echo socket=$socketdir &gt;&gt; /etc/my.cnf<br>  echo “写入成功。”<br>elif [ “$yorn” = “n” ]; then<br>  echo “将使用默认路径/var/lib/mysql，/var/lib/mysql/mysql.sock”<br>  echo $aa &gt; /etc/my.cnf<br>  echo datadir=$moren1 &gt;&gt; /etc/my.cnf<br>  echo socket=$moren2 &gt;&gt; /etc/my.cnf<br>  echo $a &gt;&gt; /etc/my.cnf<br>  echo $b &gt;&gt; /etc/my.cnf<br>  echo $c &gt;&gt; /etc/my.cnf<br>  echo $d &gt;&gt; /etc/my.cnf<br>  echo $e &gt;&gt; /etc/my.cnf<br>  echo $f &gt;&gt; /etc/my.cnf<br>  echo $g &gt;&gt; /etc/my.cnf<br>  echo $h &gt;&gt; /etc/my.cnf<br>  echo $i &gt;&gt; /etc/my.cnf<br>  echo $j &gt;&gt; /etc/my.cnf<br>  echo socket=$moren2 &gt;&gt; /etc/my.cnf<br>else<br>  echo “输入错误，拜您个拜!”<br>  exit 0<br>fi</p><p>echo “————————————————“<br>echo “启动mysql”<br>service mysqld restart<br>echo “开始配置mysql”</p><p>HOSTNAME=”localhost”<br>PORT=”3306”<br>USER_NAME=”root”<br>PASSWORD_LOG=$(grep ‘temporary password’ /var/log/mysqld.log)<br>PASSWORD_LOG_NEW=${PASSWORD_LOG##*: }<br>PASSWORD_NEW=”Mysql@123456”<br>echo $PASSWORD_LOG_NEW</p><p>mysql –connect-expired-password -u”$USER_NAME” -p”$PASSWORD_LOG_NEW” &lt;&lt; EOF &gt;/dev/null 2&gt;&amp;1<br>ALTER USER ‘root‘@’localhost’ IDENTIFIED BY ‘$PASSWORD_NEW’;<br>flush privileges;<br>use mysql;<br>update user set host=’%’ where user =’root’ and host=’localhost’;<br>select host,user from user;<br>grant all privileges on <em>.</em> to root@’%’ identified by ‘$PASSWORD_NEW’ with grant option;<br>EOF</p><p>echo -e “\033[31m密码初始化完成，远程功能初始化完成。正在重启mysql\033[0m”<br>service mysqld restart</p><p>echo “————————————————“</p><p>read -p “请输入centos版本便于设置mysql开机自启动(centos6/centos7)” VERSION1<br>if [ “$VERSION1” = “centos6” ]; then<br>chkconfig mysqld on<br>echo “开机自启动设置成功”<br>elif [ “$VERSION1” = “centos7” ]; then<br>systemctl enable mysqld.service<br>echo “开机自启动设置成功”<br>else<br>echo “输入错误，自己手动设置吧!”<br>exit 0<br>fi</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;•┈┈┈┈┈┈୨୧┈┈┈┈┈┈•&lt;br&gt;
    
    </summary>
    
    
      <category term="shell" scheme="http://yoursite.com/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>👩‍🎤格式</title>
    <link href="http://yoursite.com/2019/01/01/article-title%E7%9A%84%E5%89%AF%E6%9C%AC/"/>
    <id>http://yoursite.com/2019/01/01/article-title的副本/</id>
    <published>2019-01-01T09:34:23.000Z</published>
    <updated>2019-04-29T07:46:14.000Z</updated>
    
    <content type="html"><![CDATA[<p>•┈┈┈┈┈┈୨୧┈┈┈┈┈┈•<br>            Hello<br><a id="more"></a></p><p>/<em> ！！！！！！！！！！<br><strong> 每一项的 : 后面均有一个空格</strong> 且 : 为英文符号<br>** ！！！！！！！！！！</em>/</p><p>title:<br>/<em> 文章标题，可以为中文 </em>/</p><p>date:<br>/<em> 建立日期，如果自己手动添加，请按固定格式<br><strong> 就算不写，页面每篇文章顶部的发表于……也能显示</strong> 只要在主题配置文件中，配置了 created_at 就行<br><strong> 那为什么还要自己加上？</strong> 自定义文章发布的时间</em>/</p><p>updated:<br>/<em> 更新日期，其它与上面的建立日期类似<br><strong> 不过在页面每篇文章顶部，是更新于……</strong> 在主题配置文件中，是 updated_at</em>/</p><p>permalink:<br>/<em> 若站点配置文件下的 permalink 配置了 title<br>** 则可以替换文章 URL 里面的 title（文章标题）</em>/</p><p>categories:<br>/* 分类，支持多级，比如：</p><ul><li>technology</li><li>computer</li><li>computer-aided-art<br>则为technology/computer/computer-aided-art<br>（不适用于 layout: page）<br>*/</li></ul><p>tags:<br>/<em> 标签<br><strong> 多个可以这样写[标签1,标签2,标签3]</strong> （不适用于 layout: page）</em>/</p><p>description:<br>/<em> 文章的描述，在每篇文章标题下方显示<br><strong> 并且作为网页的 description 元数据</strong> 如果不写，则自动取 <!-- more --><br><strong> 之前的文字作为网页的 description 元数据</strong> 建议每篇文章都务必加上！</em>/</p><p>keywords:<br>/<em> 关键字，并且作为网页的 keywords 元数据<br><strong> 如果不写，则自动取 tags 里的项</strong> 作为网页的 keywords 元数据</em>/</p><p>comments:<br>/<em> 是否开启评论<br><strong> 默认值是 true</strong> 要关闭写 false</em>/</p><p>layout:<br>/<em> 页面布局，默认值是 post，默认值可以在<br><strong> 站点配置文件中修改 default_layout</strong> 另：404 页面可能用到，将其值改为 false</em>/</p><p>type:<br>/<em> categories，目录页面<br><strong> tags，标签页面</strong> picture，用来生成 group-pictures<br><strong> quote？</strong> <a href="https://reuixiy.github.io/uncategorized/2010/01/01/test.html" target="_blank" rel="noopener">https://reuixiy.github.io/uncategorized/2010/01/01/test.html</a></em>/</p><p>photos:<br>/* Gallery support，用来支持画廊 / 相册，用法如下：</p><ul><li>photo_url_1</li><li>photo_url_2</li><li>photo_url_3<br><a href="https://reuixiy.github.io/uncategorized/2010/01/01/test.html" target="_blank" rel="noopener">https://reuixiy.github.io/uncategorized/2010/01/01/test.html</a><br>*/</li></ul><p>link:<br>/<em> 文章的外部链接<br>** <a href="https://reuixiy.github.io/uncategorized/2010/01/01/test.html" target="_blank" rel="noopener">https://reuixiy.github.io/uncategorized/2010/01/01/test.html</a></em>/</p><p>image:<br>/<em> 自定义的文章摘要图片，只在页面展示，文章内消失<br>** 此项只有参考本文 5.14 节配置好，否则请勿添加！</em>/</p><p>sticky:<br>/<em> 文章置顶<br>** 此项只有参考本文 5.15 节配置好，否则请勿添加！</em>/</p><p>password:<br>/<em> 文章密码，此项只有参考教程：<br><strong> <a href="http://shenzekun.cn/hexo的next主题个性化配置教程.html" target="_blank" rel="noopener">http://shenzekun.cn/hexo的next主题个性化配置教程.html</a></strong> 第 24 节，配置好，否则请勿添加！<br><strong> 发现还是有 bug 的，就是右键在新标签中打开</strong> 然后无论是否输入密码，都能看到内容</em>/</p><p>我个人的总结</p><p>首先是基础但重要：</p><p>文章内标题请从二级标题（##）开始！<br>英语单词、数字左右看情况加上空格！<br>Markdwon 文档写完一段回车后务必再回车一次空一行！<br>然后如果有些用 Markdwon 的语法却达不到预期效果（甚至产生奇怪的 bugs），或者用 Markdwon 的语法无法实现，这时就可以考虑用 HTML 和 CSS。</p><p>分隔线和空行<br>1<br>2<br>3<br>4<br>5<br>6<br>7<br>/<em> 分隔线 </em>/</p><p><hr><br>/<em> 注意事项[6]：在XHTML 中，<hr> 必须被正确地关闭，比如 <hr> </em>/</p><p>/<em> 空行 </em>/<br><br><br>/<em> 注意事项同上 </em>/<br>引用<br>1<br>2<br>3<br>4</p><blockquote>引用内容</blockquote><p>/<em> 如果上下间距很小，可以像下面这样写 </em>/</p><p></p><p><blockquote>引用内容</blockquote></p><br>居中和右对齐<br>1<br>2<br>3<br>4<br>5<br>/<em> 居中 </em>/<p></p><center>内容</center><p>/<em> 右对齐 </em>/</p><p></p><p style="text-align:right">内容</p><br>字体大小和颜色<br>1<br>2<p></p><p><font color="#xxxxxx" size="number">内容</font><br>/<em> 详细请查看 <a href="http://www.w3school.com.cn/tags/tag_font.asp" target="_blank" rel="noopener">http://www.w3school.com.cn/tags/tag_font.asp</a> </em>/<br>Todo list<br>1<br>2<br>3<br>4</p><ul><br><li><i class="fa fa-check-square"></i> 已完成</li><br><li><i class="fa fa-square"></i> 未完成</li><br></ul><p>音乐</p><p>可以直接用 HTML 的标签，写法如下：</p><p>1</p><p>&lt;audio src=”https://什么什么什么.mp3” style=”max-height :100%; max-width: 100%; display: block; margin-lef</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;•┈┈┈┈┈┈୨୧┈┈┈┈┈┈•&lt;br&gt;            Hello&lt;br&gt;
    
    </summary>
    
    
      <category term="test" scheme="http://yoursite.com/tags/test/"/>
    
  </entry>
  
  <entry>
    <title>🐣</title>
    <link href="http://yoursite.com/1919/01/01/article-title/"/>
    <id>http://yoursite.com/1919/01/01/article-title/</id>
    <published>1919-01-01T09:34:23.000Z</published>
    <updated>2019-04-29T06:47:19.000Z</updated>
    
    <content type="html"><![CDATA[<p>•┈┈┈┈┈┈୨୧┈┈┈┈┈┈•<br>            Hello </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;•┈┈┈┈┈┈୨୧┈┈┈┈┈┈•&lt;br&gt;            Hello &lt;/p&gt;

      
    
    </summary>
    
    
      <category term="test" scheme="http://yoursite.com/tags/test/"/>
    
  </entry>
  
</feed>
